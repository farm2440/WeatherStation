ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000000u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 4


 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0E20     		mov	r0, #14
  39 000c 2349     		ldr	r1, .L6
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 224B     		ldr	r3, .L6+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 224B     		ldr	r3, .L6+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 5


 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DA     		bge	.L5
  52 0020 2149     		ldr	r1, .L6+12
  53 0022 00E0     		b	.L2
  54              	.L5:
  55 0024 2149     		ldr	r1, .L6+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 224A     		ldr	r2, .L6+20
  59 0028 1368     		ldr	r3, [r2]
  60 002a 0B43     		orr	r3, r1
  61 002c 1360     		str	r3, [r2]
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  62              		.loc 1 182 0 is_stmt 1 discriminator 4
  63 002e 214A     		ldr	r2, .L6+24
  64 0030 214B     		ldr	r3, .L6+28
  65 0032 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  66              		.loc 1 183 0 discriminator 4
  67 0034 214A     		ldr	r2, .L6+32
  68 0036 224B     		ldr	r3, .L6+36
  69 0038 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  70              		.loc 1 184 0 discriminator 4
  71 003a 0023     		mov	r3, #0
  72 003c 214A     		ldr	r2, .L6+40
  73 003e 1360     		str	r3, [r2]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  74              		.loc 1 185 0 discriminator 4
  75 0040 214A     		ldr	r2, .L6+44
  76 0042 2249     		ldr	r1, .L6+48
  77 0044 0A60     		str	r2, [r1]
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  78              		.loc 1 186 0 discriminator 4
  79 0046 2249     		ldr	r1, .L6+52
  80 0048 0A60     		str	r2, [r1]
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  81              		.loc 1 190 0 discriminator 4
  82 004a 2249     		ldr	r1, .L6+56
  83 004c 0A68     		ldr	r2, [r1]
  84 004e 8020     		mov	r0, #128
  85 0050 4002     		lsl	r0, r0, #9
  86 0052 0243     		orr	r2, r0
  87 0054 0A60     		str	r2, [r1]
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 6


 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  88              		.loc 1 197 0 discriminator 4
  89 0056 204A     		ldr	r2, .L6+60
  90 0058 1360     		str	r3, [r2]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  91              		.loc 1 198 0 discriminator 4
  92 005a 204A     		ldr	r2, .L6+64
  93 005c 1360     		str	r3, [r2]
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  94              		.loc 1 199 0 discriminator 4
  95 005e 0133     		add	r3, r3, #1
  96 0060 1F4A     		ldr	r2, .L6+68
  97 0062 1360     		str	r3, [r2]
 200:.\Generated_Source\PSoC4/ADC.c **** 
 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
  98              		.loc 1 202 0 discriminator 4
  99 0064 0221     		mov	r1, #2
 100 0066 1F4A     		ldr	r2, .L6+72
 101 0068 1160     		str	r1, [r2]
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 102              		.loc 1 206 0 discriminator 4
 103 006a 1F49     		ldr	r1, .L6+76
 104 006c 0868     		ldr	r0, [r1]
 105              	.LVL2:
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 106              		.loc 1 207 0 discriminator 4
 107 006e 1F4A     		ldr	r2, .L6+80
 108 0070 0240     		and	r2, r0
 109              	.LVL3:
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 110              		.loc 1 213 0 discriminator 4
 111 0072 1343     		orr	r3, r2
 112              	.LVL4:
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 113              		.loc 1 226 0 discriminator 4
 114 0074 0B60     		str	r3, [r1]
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 7


 115              	.LVL5:
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 116              		.loc 1 232 0 discriminator 4
 117 0076 0023     		mov	r3, #0
 118              	.LVL6:
 119 0078 0DE0     		b	.L3
 120              	.LVL7:
 121              	.L4:
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 122              		.loc 1 253 0
 123 007a 9A00     		lsl	r2, r3, #2
 124 007c 1C49     		ldr	r1, .L6+84
 125 007e 8C46     		mov	ip, r1
 126 0080 6244     		add	r2, r2, ip
 127 0082 0021     		mov	r1, #0
 128 0084 1160     		str	r1, [r2]
 129              	.LVL8:
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 8


 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 130              		.loc 1 298 0
 131 0086 5800     		lsl	r0, r3, #1
 132 0088 1A4A     		ldr	r2, .L6+88
 133 008a 8152     		strh	r1, [r0, r2]
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 134              		.loc 1 311 0
 135 008c 9900     		lsl	r1, r3, #2
 136 008e 1A48     		ldr	r0, .L6+92
 137 0090 1A4A     		ldr	r2, .L6+96
 138 0092 8850     		str	r0, [r1, r2]
 232:.\Generated_Source\PSoC4/ADC.c ****     {
 139              		.loc 1 232 0
 140 0094 0133     		add	r3, r3, #1
 141              	.LVL9:
 142              	.L3:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 9


 232:.\Generated_Source\PSoC4/ADC.c ****     {
 143              		.loc 1 232 0 is_stmt 0 discriminator 1
 144 0096 002B     		cmp	r3, #0
 145 0098 EFD0     		beq	.L4
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
 146              		.loc 1 314 0 is_stmt 1
 147              		@ sp needed
 148 009a 08BD     		pop	{r3, pc}
 149              	.L7:
 150              		.align	2
 151              	.L6:
 152 009c 00000000 		.word	ADC_ISR
 153 00a0 20001A40 		.word	1075445792
 154 00a4 80031A40 		.word	1075446656
 155 00a8 C0021053 		.word	1393558208
 156 00ac C0020053 		.word	1392509632
 157 00b0 00001A40 		.word	1075445760
 158 00b4 8C000080 		.word	-2147483508
 159 00b8 04001A40 		.word	1075445764
 160 00bc 0000FF07 		.word	134152192
 161 00c0 18001A40 		.word	1075445784
 162 00c4 1C001A40 		.word	1075445788
 163 00c8 04000400 		.word	262148
 164 00cc 10001A40 		.word	1075445776
 165 00d0 14001A40 		.word	1075445780
 166 00d4 00031A40 		.word	1075446528
 167 00d8 28021A40 		.word	1075446312
 168 00dc 38021A40 		.word	1075446328
 169 00e0 18021A40 		.word	1075446296
 170 00e4 000F1A40 		.word	1075449600
 171 00e8 30001A40 		.word	1075445808
 172 00ec FFFFFFDF 		.word	-536870913
 173 00f0 80001A40 		.word	1075445888
 174 00f4 00000000 		.word	ADC_offset
 175 00f8 204E0000 		.word	20000
 176 00fc 00000000 		.word	ADC_countsPer10Volt
 177              		.cfi_endproc
 178              	.LFE1:
 179              		.size	ADC_Init, .-ADC_Init
 180              		.section	.text.ADC_Enable,"ax",%progbits
 181              		.align	2
 182              		.global	ADC_Enable
 183              		.code	16
 184              		.thumb_func
 185              		.type	ADC_Enable, %function
 186              	ADC_Enable:
 187              	.LFB2:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 10


 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 188              		.loc 1 331 0
 189              		.cfi_startproc
 190 0000 08B5     		push	{r3, lr}
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 194              		.loc 1 332 0
 195 0002 074B     		ldr	r3, .L10
 196 0004 1B68     		ldr	r3, [r3]
 197 0006 002B     		cmp	r3, #0
 198 0008 08DB     		blt	.L8
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 199              		.loc 1 342 0
 200 000a 054A     		ldr	r2, .L10
 201 000c 1368     		ldr	r3, [r2]
 202 000e 8021     		mov	r1, #128
 203 0010 0906     		lsl	r1, r1, #24
 204 0012 0B43     		orr	r3, r1
 205 0014 1360     		str	r3, [r2]
 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 206              		.loc 1 345 0
 207 0016 0A20     		mov	r0, #10
 208 0018 FFF7FEFF 		bl	CyDelayUs
 209              	.LVL10:
 210              	.L8:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 211              		.loc 1 347 0
 212              		@ sp needed
 213 001c 08BD     		pop	{r3, pc}
 214              	.L11:
 215 001e C046     		.align	2
 216              	.L10:
 217 0020 00001A40 		.word	1075445760
 218              		.cfi_endproc
 219              	.LFE2:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 11


 220              		.size	ADC_Enable, .-ADC_Enable
 221              		.section	.text.ADC_Start,"ax",%progbits
 222              		.align	2
 223              		.global	ADC_Start
 224              		.code	16
 225              		.thumb_func
 226              		.type	ADC_Start, %function
 227              	ADC_Start:
 228              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 229              		.loc 1 64 0
 230              		.cfi_startproc
 231 0000 08B5     		push	{r3, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 235              		.loc 1 66 0
 236 0002 064B     		ldr	r3, .L14
 237 0004 1B78     		ldrb	r3, [r3]
 238 0006 002B     		cmp	r3, #0
 239 0008 04D1     		bne	.L13
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 240              		.loc 1 68 0
 241 000a FFF7FEFF 		bl	ADC_Init
 242              	.LVL11:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 243              		.loc 1 69 0
 244 000e 0122     		mov	r2, #1
 245 0010 024B     		ldr	r3, .L14
 246 0012 1A70     		strb	r2, [r3]
 247              	.L13:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 248              		.loc 1 71 0
 249 0014 FFF7FEFF 		bl	ADC_Enable
 250              	.LVL12:
  72:.\Generated_Source\PSoC4/ADC.c **** 
 251              		.loc 1 72 0
 252              		@ sp needed
 253 0018 08BD     		pop	{r3, pc}
 254              	.L15:
 255 001a C046     		.align	2
 256              	.L14:
 257 001c 00000000 		.word	.LANCHOR0
 258              		.cfi_endproc
 259              	.LFE0:
 260              		.size	ADC_Start, .-ADC_Start
 261              		.section	.text.ADC_Stop,"ax",%progbits
 262              		.align	2
 263              		.global	ADC_Stop
 264              		.code	16
 265              		.thumb_func
 266              		.type	ADC_Stop, %function
 267              	ADC_Stop:
 268              	.LFB3:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 12


 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 269              		.loc 1 366 0
 270              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 271              		.loc 1 367 0
 272 0000 024A     		ldr	r2, .L17
 273 0002 1368     		ldr	r3, [r2]
 274 0004 5B00     		lsl	r3, r3, #1
 275 0006 5B08     		lsr	r3, r3, #1
 276 0008 1360     		str	r3, [r2]
 368:.\Generated_Source\PSoC4/ADC.c **** }
 277              		.loc 1 368 0
 278              		@ sp needed
 279 000a 7047     		bx	lr
 280              	.L18:
 281              		.align	2
 282              	.L17:
 283 000c 00001A40 		.word	1075445760
 284              		.cfi_endproc
 285              	.LFE3:
 286              		.size	ADC_Stop, .-ADC_Stop
 287              		.section	.text.ADC_StartConvert,"ax",%progbits
 288              		.align	2
 289              		.global	ADC_StartConvert
 290              		.code	16
 291              		.thumb_func
 292              		.type	ADC_StartConvert, %function
 293              	ADC_StartConvert:
 294              	.LFB4:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 13


 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 295              		.loc 1 392 0
 296              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 297              		.loc 1 394 0
 298 0000 034A     		ldr	r2, .L20
 299 0002 1368     		ldr	r3, [r2]
 300 0004 8021     		mov	r1, #128
 301 0006 4902     		lsl	r1, r1, #9
 302 0008 0B43     		orr	r3, r1
 303 000a 1360     		str	r3, [r2]
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 304              		.loc 1 399 0
 305              		@ sp needed
 306 000c 7047     		bx	lr
 307              	.L21:
 308 000e C046     		.align	2
 309              	.L20:
 310 0010 04001A40 		.word	1075445764
 311              		.cfi_endproc
 312              	.LFE4:
 313              		.size	ADC_StartConvert, .-ADC_StartConvert
 314              		.section	.text.ADC_StopConvert,"ax",%progbits
 315              		.align	2
 316              		.global	ADC_StopConvert
 317              		.code	16
 318              		.thumb_func
 319              		.type	ADC_StopConvert, %function
 320              	ADC_StopConvert:
 321              	.LFB5:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 14


 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 322              		.loc 1 417 0
 323              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 324              		.loc 1 419 0
 325 0000 024A     		ldr	r2, .L23
 326 0002 1168     		ldr	r1, [r2]
 327 0004 024B     		ldr	r3, .L23+4
 328 0006 0B40     		and	r3, r1
 329 0008 1360     		str	r3, [r2]
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 330              		.loc 1 421 0
 331              		@ sp needed
 332 000a 7047     		bx	lr
 333              	.L24:
 334              		.align	2
 335              	.L23:
 336 000c 04001A40 		.word	1075445764
 337 0010 FFFFFEFF 		.word	-65537
 338              		.cfi_endproc
 339              	.LFE5:
 340              		.size	ADC_StopConvert, .-ADC_StopConvert
 341              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 342              		.align	2
 343              		.global	ADC_IsEndConversion
 344              		.code	16
 345              		.thumb_func
 346              		.type	ADC_IsEndConversion, %function
 347              	ADC_IsEndConversion:
 348              	.LFB6:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 15


 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 349              		.loc 1 451 0
 350              		.cfi_startproc
 351              	.LVL13:
 352 0000 021C     		mov	r2, r0
 353              	.LVL14:
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 354              		.loc 1 454 0
 355 0002 8307     		lsl	r3, r0, #30
 356 0004 0CD0     		beq	.L29
 357              	.LVL15:
 358              	.L28:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 359              		.loc 1 458 0 discriminator 2
 360 0006 074B     		ldr	r3, .L30
 361 0008 1B68     		ldr	r3, [r3]
 362 000a 0120     		mov	r0, #1
 363 000c 1840     		and	r0, r3
 364              	.LVL16:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 365              		.loc 1 459 0 discriminator 2
 366 000e 01D1     		bne	.L27
 367              		.loc 1 459 0 is_stmt 0 discriminator 1
 368 0010 9307     		lsl	r3, r2, #30
 369 0012 F8D4     		bmi	.L28
 370              	.L27:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 371              		.loc 1 461 0 is_stmt 1
 372 0014 0028     		cmp	r0, #0
 373 0016 04D0     		beq	.L26
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 374              		.loc 1 464 0
 375 0018 0122     		mov	r2, #1
 376              	.LVL17:
 377 001a 024B     		ldr	r3, .L30
 378 001c 1A60     		str	r2, [r3]
 379 001e 00E0     		b	.L26
 380              	.LVL18:
 381              	.L29:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 16


 452:.\Generated_Source\PSoC4/ADC.c **** 
 382              		.loc 1 452 0
 383 0020 0020     		mov	r0, #0
 384              	.LVL19:
 385              	.L26:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 386              		.loc 1 486 0
 387              		@ sp needed
 388 0022 7047     		bx	lr
 389              	.L31:
 390              		.align	2
 391              	.L30:
 392 0024 10021A40 		.word	1075446288
 393              		.cfi_endproc
 394              	.LFE6:
 395              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 396              		.section	.text.ADC_GetResult16,"ax",%progbits
 397              		.align	2
 398              		.global	ADC_GetResult16
 399              		.code	16
 400              		.thumb_func
 401              		.type	ADC_GetResult16, %function
 402              	ADC_GetResult16:
 403              	.LFB7:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 17


 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 404              		.loc 1 505 0
 405              		.cfi_startproc
 406              	.LVL20:
 407 0000 10B5     		push	{r4, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 14, -4
 411 0002 041E     		sub	r4, r0, #0
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 412              		.loc 1 509 0
 413 0004 02D0     		beq	.L33
 414              		.loc 1 509 0 is_stmt 0 discriminator 1
 415 0006 0020     		mov	r0, #0
 416              	.LVL21:
 417 0008 FFF7FEFF 		bl	CyHalt
 418              	.LVL22:
 419              	.L33:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 420              		.loc 1 511 0 is_stmt 1
 421 000c 002C     		cmp	r4, #0
 422 000e 07D1     		bne	.L35
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 423              		.loc 1 513 0
 424 0010 A400     		lsl	r4, r4, #2
 425              	.LVL23:
 426 0012 054B     		ldr	r3, .L36
 427 0014 9C46     		mov	ip, r3
 428 0016 6444     		add	r4, r4, ip
 429 0018 2068     		ldr	r0, [r4]
 430 001a 0004     		lsl	r0, r0, #16
 431 001c 000C     		lsr	r0, r0, #16
 432              	.LVL24:
 433 001e 00E0     		b	.L34
 434              	.LVL25:
 435              	.L35:
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 436              		.loc 1 521 0
 437 0020 0020     		mov	r0, #0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 18


 438              	.LVL26:
 439              	.L34:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 440              		.loc 1 525 0
 441 0022 00B2     		sxth	r0, r0
 442              	.LVL27:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 443              		.loc 1 526 0
 444              		@ sp needed
 445 0024 10BD     		pop	{r4, pc}
 446              	.L37:
 447 0026 C046     		.align	2
 448              	.L36:
 449 0028 80011A40 		.word	1075446144
 450              		.cfi_endproc
 451              	.LFE7:
 452              		.size	ADC_GetResult16, .-ADC_GetResult16
 453              		.section	.text.ADC_SetChanMask,"ax",%progbits
 454              		.align	2
 455              		.global	ADC_SetChanMask
 456              		.code	16
 457              		.thumb_func
 458              		.type	ADC_SetChanMask, %function
 459              	ADC_SetChanMask:
 460              	.LFB8:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 461              		.loc 1 550 0
 462              		.cfi_startproc
 463              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 464              		.loc 1 551 0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 19


 465 0000 0123     		mov	r3, #1
 466 0002 1840     		and	r0, r3
 467              	.LVL29:
 468 0004 014B     		ldr	r3, .L39
 469 0006 1860     		str	r0, [r3]
 552:.\Generated_Source\PSoC4/ADC.c **** }
 470              		.loc 1 552 0
 471              		@ sp needed
 472 0008 7047     		bx	lr
 473              	.L40:
 474 000a C046     		.align	2
 475              	.L39:
 476 000c 20001A40 		.word	1075445792
 477              		.cfi_endproc
 478              	.LFE8:
 479              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 480              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 481              		.align	2
 482              		.global	ADC_SetLowLimit
 483              		.code	16
 484              		.thumb_func
 485              		.type	ADC_SetLowLimit, %function
 486              	ADC_SetLowLimit:
 487              	.LFB9:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 20


 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 488              		.loc 1 594 0
 489              		.cfi_startproc
 490              	.LVL30:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 491              		.loc 1 595 0
 492 0000 054A     		ldr	r2, .L42
 493 0002 1368     		ldr	r3, [r2]
 494 0004 1B0C     		lsr	r3, r3, #16
 495 0006 1B04     		lsl	r3, r3, #16
 496 0008 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 497              		.loc 1 596 0
 498 000a 1368     		ldr	r3, [r2]
 499 000c 0004     		lsl	r0, r0, #16
 500              	.LVL31:
 501 000e 000C     		lsr	r0, r0, #16
 502 0010 1843     		orr	r0, r3
 503 0012 1060     		str	r0, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 504              		.loc 1 597 0
 505              		@ sp needed
 506 0014 7047     		bx	lr
 507              	.L43:
 508 0016 C046     		.align	2
 509              	.L42:
 510 0018 18001A40 		.word	1075445784
 511              		.cfi_endproc
 512              	.LFE9:
 513              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 514              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 515              		.align	2
 516              		.global	ADC_SetHighLimit
 517              		.code	16
 518              		.thumb_func
 519              		.type	ADC_SetHighLimit, %function
 520              	ADC_SetHighLimit:
 521              	.LFB10:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 21


 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 522              		.loc 1 615 0
 523              		.cfi_startproc
 524              	.LVL32:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 525              		.loc 1 616 0
 526 0000 044A     		ldr	r2, .L45
 527 0002 1368     		ldr	r3, [r2]
 528 0004 1B04     		lsl	r3, r3, #16
 529 0006 1B0C     		lsr	r3, r3, #16
 530 0008 1360     		str	r3, [r2]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 531              		.loc 1 617 0
 532 000a 1368     		ldr	r3, [r2]
 533 000c 0004     		lsl	r0, r0, #16
 534              	.LVL33:
 535 000e 1843     		orr	r0, r3
 536 0010 1060     		str	r0, [r2]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 537              		.loc 1 618 0
 538              		@ sp needed
 539 0012 7047     		bx	lr
 540              	.L46:
 541              		.align	2
 542              	.L45:
 543 0014 18001A40 		.word	1075445784
 544              		.cfi_endproc
 545              	.LFE10:
 546              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 547              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 548              		.align	2
 549              		.global	ADC_SetLimitMask
 550              		.code	16
 551              		.thumb_func
 552              		.type	ADC_SetLimitMask, %function
 553              	ADC_SetLimitMask:
 554              	.LFB11:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 22


 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 555              		.loc 1 639 0
 556              		.cfi_startproc
 557              	.LVL34:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 558              		.loc 1 640 0
 559 0000 0123     		mov	r3, #1
 560 0002 1840     		and	r0, r3
 561              	.LVL35:
 562 0004 014B     		ldr	r3, .L48
 563 0006 1860     		str	r0, [r3]
 641:.\Generated_Source\PSoC4/ADC.c **** }
 564              		.loc 1 641 0
 565              		@ sp needed
 566 0008 7047     		bx	lr
 567              	.L49:
 568 000a C046     		.align	2
 569              	.L48:
 570 000c 38021A40 		.word	1075446328
 571              		.cfi_endproc
 572              	.LFE11:
 573              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 574              		.section	.text.ADC_SetSatMask,"ax",%progbits
 575              		.align	2
 576              		.global	ADC_SetSatMask
 577              		.code	16
 578              		.thumb_func
 579              		.type	ADC_SetSatMask, %function
 580              	ADC_SetSatMask:
 581              	.LFB12:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 23


 582              		.loc 1 662 0
 583              		.cfi_startproc
 584              	.LVL36:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 585              		.loc 1 663 0
 586 0000 0123     		mov	r3, #1
 587 0002 1840     		and	r0, r3
 588              	.LVL37:
 589 0004 014B     		ldr	r3, .L51
 590 0006 1860     		str	r0, [r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 591              		.loc 1 664 0
 592              		@ sp needed
 593 0008 7047     		bx	lr
 594              	.L52:
 595 000a C046     		.align	2
 596              	.L51:
 597 000c 28021A40 		.word	1075446312
 598              		.cfi_endproc
 599              	.LFE12:
 600              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 601              		.section	.text.ADC_SetOffset,"ax",%progbits
 602              		.align	2
 603              		.global	ADC_SetOffset
 604              		.code	16
 605              		.thumb_func
 606              		.type	ADC_SetOffset, %function
 607              	ADC_SetOffset:
 608              	.LFB13:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 609              		.loc 1 690 0
 610              		.cfi_startproc
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 24


 611              	.LVL38:
 612 0000 38B5     		push	{r3, r4, r5, lr}
 613              		.cfi_def_cfa_offset 16
 614              		.cfi_offset 3, -16
 615              		.cfi_offset 4, -12
 616              		.cfi_offset 5, -8
 617              		.cfi_offset 14, -4
 618 0002 041C     		mov	r4, r0
 619 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 620              		.loc 1 692 0
 621 0006 0028     		cmp	r0, #0
 622 0008 02D0     		beq	.L54
 623              		.loc 1 692 0 is_stmt 0 discriminator 1
 624 000a 0020     		mov	r0, #0
 625              	.LVL39:
 626 000c FFF7FEFF 		bl	CyHalt
 627              	.LVL40:
 628              	.L54:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 629              		.loc 1 694 0 is_stmt 1
 630 0010 6400     		lsl	r4, r4, #1
 631              	.LVL41:
 632 0012 014B     		ldr	r3, .L55
 633 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 634              		.loc 1 695 0
 635              		@ sp needed
 636 0016 38BD     		pop	{r3, r4, r5, pc}
 637              	.L56:
 638              		.align	2
 639              	.L55:
 640 0018 00000000 		.word	ADC_offset
 641              		.cfi_endproc
 642              	.LFE13:
 643              		.size	ADC_SetOffset, .-ADC_SetOffset
 644              		.section	.text.ADC_SetGain,"ax",%progbits
 645              		.align	2
 646              		.global	ADC_SetGain
 647              		.code	16
 648              		.thumb_func
 649              		.type	ADC_SetGain, %function
 650              	ADC_SetGain:
 651              	.LFB14:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 25


 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 652              		.loc 1 724 0
 653              		.cfi_startproc
 654              	.LVL42:
 655 0000 38B5     		push	{r3, r4, r5, lr}
 656              		.cfi_def_cfa_offset 16
 657              		.cfi_offset 3, -16
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 5, -8
 660              		.cfi_offset 14, -4
 661 0002 041C     		mov	r4, r0
 662 0004 0D1C     		mov	r5, r1
 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 663              		.loc 1 726 0
 664 0006 0028     		cmp	r0, #0
 665 0008 02D0     		beq	.L58
 666              		.loc 1 726 0 is_stmt 0 discriminator 1
 667 000a 0020     		mov	r0, #0
 668              	.LVL43:
 669 000c FFF7FEFF 		bl	CyHalt
 670              	.LVL44:
 671              	.L58:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 672              		.loc 1 728 0 is_stmt 1
 673 0010 A400     		lsl	r4, r4, #2
 674              	.LVL45:
 675 0012 014B     		ldr	r3, .L59
 676 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 677              		.loc 1 729 0
 678              		@ sp needed
 679              	.LVL46:
 680 0016 38BD     		pop	{r3, r4, r5, pc}
 681              	.L60:
 682              		.align	2
 683              	.L59:
 684 0018 00000000 		.word	ADC_countsPer10Volt
 685              		.cfi_endproc
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 26


 686              	.LFE14:
 687              		.size	ADC_SetGain, .-ADC_SetGain
 688              		.global	__aeabi_idiv
 689              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 690              		.align	2
 691              		.global	ADC_CountsTo_mVolts
 692              		.code	16
 693              		.thumb_func
 694              		.type	ADC_CountsTo_mVolts, %function
 695              	ADC_CountsTo_mVolts:
 696              	.LFB15:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 697              		.loc 1 757 0
 698              		.cfi_startproc
 699              	.LVL47:
 700 0000 38B5     		push	{r3, r4, r5, lr}
 701              		.cfi_def_cfa_offset 16
 702              		.cfi_offset 3, -16
 703              		.cfi_offset 4, -12
 704              		.cfi_offset 5, -8
 705              		.cfi_offset 14, -4
 706 0002 041C     		mov	r4, r0
 707 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 708              		.loc 1 761 0
 709 0006 0028     		cmp	r0, #0
 710 0008 02D0     		beq	.L62
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 27


 711              		.loc 1 761 0 is_stmt 0 discriminator 1
 712 000a 0020     		mov	r0, #0
 713              	.LVL48:
 714 000c FFF7FEFF 		bl	CyHalt
 715              	.LVL49:
 716              	.L62:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 717              		.loc 1 772 0 is_stmt 1
 718 0010 6300     		lsl	r3, r4, #1
 719 0012 0F4A     		ldr	r2, .L65
 720 0014 995A     		ldrh	r1, [r3, r2]
 721 0016 691A     		sub	r1, r5, r1
 722 0018 09B2     		sxth	r1, r1
 723              	.LVL50:
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 724              		.loc 1 774 0
 725 001a 0E48     		ldr	r0, .L65+4
 726 001c 021C     		mov	r2, r0
 727 001e 4A43     		mul	r2, r1
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 728              		.loc 1 775 0
 729 0020 0029     		cmp	r1, #0
 730 0022 06DD     		ble	.L63
 731              		.loc 1 775 0 is_stmt 0 discriminator 1
 732 0024 A300     		lsl	r3, r4, #2
 733 0026 0C49     		ldr	r1, .L65+8
 734              	.LVL51:
 735 0028 5B58     		ldr	r3, [r3, r1]
 736 002a D80F     		lsr	r0, r3, #31
 737 002c C018     		add	r0, r0, r3
 738 002e 4310     		asr	r3, r0, #1
 739 0030 06E0     		b	.L64
 740              	.LVL52:
 741              	.L63:
 742              		.loc 1 775 0 discriminator 2
 743 0032 A300     		lsl	r3, r4, #2
 744 0034 0849     		ldr	r1, .L65+8
 745              	.LVL53:
 746 0036 5B58     		ldr	r3, [r3, r1]
 747 0038 D80F     		lsr	r0, r3, #31
 748 003a C318     		add	r3, r0, r3
 749 003c 5B10     		asr	r3, r3, #1
 750 003e 5B42     		neg	r3, r3
 751              	.L64:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 752              		.loc 1 774 0 is_stmt 1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 28


 753 0040 D018     		add	r0, r2, r3
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 754              		.loc 1 776 0
 755 0042 A400     		lsl	r4, r4, #2
 756              	.LVL54:
 757 0044 044B     		ldr	r3, .L65+8
 758 0046 E158     		ldr	r1, [r4, r3]
 759 0048 FFF7FEFF 		bl	__aeabi_idiv
 760              	.LVL55:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 761              		.loc 1 778 0
 762 004c 00B2     		sxth	r0, r0
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 763              		.loc 1 779 0
 764              		@ sp needed
 765 004e 38BD     		pop	{r3, r4, r5, pc}
 766              	.L66:
 767              		.align	2
 768              	.L65:
 769 0050 00000000 		.word	ADC_offset
 770 0054 10270000 		.word	10000
 771 0058 00000000 		.word	ADC_countsPer10Volt
 772              		.cfi_endproc
 773              	.LFE15:
 774              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 775              		.global	__aeabi_lmul
 776              		.global	__aeabi_ldivmod
 777              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 778              		.align	2
 779              		.global	ADC_CountsTo_uVolts
 780              		.code	16
 781              		.thumb_func
 782              		.type	ADC_CountsTo_uVolts, %function
 783              	ADC_CountsTo_uVolts:
 784              	.LFB16:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 29


 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 785              		.loc 1 811 0
 786              		.cfi_startproc
 787              	.LVL56:
 788 0000 38B5     		push	{r3, r4, r5, lr}
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 3, -16
 791              		.cfi_offset 4, -12
 792              		.cfi_offset 5, -8
 793              		.cfi_offset 14, -4
 794 0002 051C     		mov	r5, r0
 795 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 796              		.loc 1 815 0
 797 0006 0028     		cmp	r0, #0
 798 0008 02D0     		beq	.L68
 799              		.loc 1 815 0 is_stmt 0 discriminator 1
 800 000a 0020     		mov	r0, #0
 801              	.LVL57:
 802 000c FFF7FEFF 		bl	CyHalt
 803              	.LVL58:
 804              	.L68:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 805              		.loc 1 826 0 is_stmt 1
 806 0010 6A00     		lsl	r2, r5, #1
 807 0012 084B     		ldr	r3, .L69
 808 0014 D05A     		ldrh	r0, [r2, r3]
 809 0016 201A     		sub	r0, r4, r0
 810 0018 00B2     		sxth	r0, r0
 811              	.LVL59:
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 812              		.loc 1 828 0
 813 001a C117     		asr	r1, r0, #31
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 30


 814 001c 064A     		ldr	r2, .L69+4
 815 001e 0023     		mov	r3, #0
 816 0020 FFF7FEFF 		bl	__aeabi_lmul
 817              	.LVL60:
 818 0024 AD00     		lsl	r5, r5, #2
 819              	.LVL61:
 820 0026 054B     		ldr	r3, .L69+8
 821 0028 EA58     		ldr	r2, [r5, r3]
 822 002a D317     		asr	r3, r2, #31
 823 002c FFF7FEFF 		bl	__aeabi_ldivmod
 824              	.LVL62:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 825              		.loc 1 831 0
 826              		@ sp needed
 827 0030 38BD     		pop	{r3, r4, r5, pc}
 828              	.L70:
 829 0032 C046     		.align	2
 830              	.L69:
 831 0034 00000000 		.word	ADC_offset
 832 0038 80969800 		.word	10000000
 833 003c 00000000 		.word	ADC_countsPer10Volt
 834              		.cfi_endproc
 835              	.LFE16:
 836              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 837              		.global	__aeabi_i2f
 838              		.global	__aeabi_fmul
 839              		.global	__aeabi_fdiv
 840              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 841              		.align	2
 842              		.global	ADC_CountsTo_Volts
 843              		.code	16
 844              		.thumb_func
 845              		.type	ADC_CountsTo_Volts, %function
 846              	ADC_CountsTo_Volts:
 847              	.LFB17:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 31


 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 848              		.loc 1 856 0
 849              		.cfi_startproc
 850              	.LVL63:
 851 0000 38B5     		push	{r3, r4, r5, lr}
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 3, -16
 854              		.cfi_offset 4, -12
 855              		.cfi_offset 5, -8
 856              		.cfi_offset 14, -4
 857 0002 041C     		mov	r4, r0
 858 0004 0D1C     		mov	r5, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 859              		.loc 1 860 0
 860 0006 0028     		cmp	r0, #0
 861 0008 02D0     		beq	.L72
 862              		.loc 1 860 0 is_stmt 0 discriminator 1
 863 000a 0020     		mov	r0, #0
 864              	.LVL64:
 865 000c FFF7FEFF 		bl	CyHalt
 866              	.LVL65:
 867              	.L72:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 868              		.loc 1 871 0 is_stmt 1
 869 0010 6200     		lsl	r2, r4, #1
 870 0012 0A4B     		ldr	r3, .L73
 871 0014 D05A     		ldrh	r0, [r2, r3]
 872 0016 281A     		sub	r0, r5, r0
 873 0018 00B2     		sxth	r0, r0
 874              	.LVL66:
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 875              		.loc 1 873 0
 876 001a FFF7FEFF 		bl	__aeabi_i2f
 877              	.LVL67:
 878 001e 0849     		ldr	r1, .L73+4
 879 0020 FFF7FEFF 		bl	__aeabi_fmul
 880              	.LVL68:
 881 0024 051C     		add	r5, r0, #0
 882 0026 A400     		lsl	r4, r4, #2
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 32


 883              	.LVL69:
 884 0028 064B     		ldr	r3, .L73+8
 885 002a E058     		ldr	r0, [r4, r3]
 886 002c FFF7FEFF 		bl	__aeabi_i2f
 887              	.LVL70:
 888 0030 011C     		add	r1, r0, #0
 889 0032 281C     		add	r0, r5, #0
 890 0034 FFF7FEFF 		bl	__aeabi_fdiv
 891              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 892              		.loc 1 876 0
 893              		@ sp needed
 894 0038 38BD     		pop	{r3, r4, r5, pc}
 895              	.L74:
 896 003a C046     		.align	2
 897              	.L73:
 898 003c 00000000 		.word	ADC_offset
 899 0040 00002041 		.word	1092616192
 900 0044 00000000 		.word	ADC_countsPer10Volt
 901              		.cfi_endproc
 902              	.LFE17:
 903              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 904              		.comm	ADC_countsPer10Volt,4,4
 905              		.comm	ADC_offset,2,4
 906              		.global	ADC_initVar
 907              		.bss
 908              		.set	.LANCHOR0,. + 0
 909              		.type	ADC_initVar, %object
 910              		.size	ADC_initVar, 1
 911              	ADC_initVar:
 912 0000 00       		.space	1
 913              		.text
 914              	.Letext0:
 915              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 916              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 917              		.section	.debug_info,"",%progbits
 918              	.Ldebug_info0:
 919 0000 94050000 		.4byte	0x594
 920 0004 0400     		.2byte	0x4
 921 0006 00000000 		.4byte	.Ldebug_abbrev0
 922 000a 04       		.byte	0x4
 923 000b 01       		.uleb128 0x1
 924 000c 08020000 		.4byte	.LASF61
 925 0010 01       		.byte	0x1
 926 0011 04030000 		.4byte	.LASF62
 927 0015 29000000 		.4byte	.LASF63
 928 0019 00000000 		.4byte	.Ldebug_ranges0+0
 929 001d 00000000 		.4byte	0
 930 0021 00000000 		.4byte	.Ldebug_line0
 931 0025 02       		.uleb128 0x2
 932 0026 01       		.byte	0x1
 933 0027 06       		.byte	0x6
 934 0028 A9000000 		.4byte	.LASF0
 935 002c 02       		.uleb128 0x2
 936 002d 01       		.byte	0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 33


 937 002e 08       		.byte	0x8
 938 002f 23030000 		.4byte	.LASF1
 939 0033 02       		.uleb128 0x2
 940 0034 02       		.byte	0x2
 941 0035 05       		.byte	0x5
 942 0036 3C030000 		.4byte	.LASF2
 943 003a 02       		.uleb128 0x2
 944 003b 02       		.byte	0x2
 945 003c 07       		.byte	0x7
 946 003d 8A010000 		.4byte	.LASF3
 947 0041 02       		.uleb128 0x2
 948 0042 04       		.byte	0x4
 949 0043 05       		.byte	0x5
 950 0044 CC000000 		.4byte	.LASF4
 951 0048 02       		.uleb128 0x2
 952 0049 04       		.byte	0x4
 953 004a 07       		.byte	0x7
 954 004b 59010000 		.4byte	.LASF5
 955 004f 02       		.uleb128 0x2
 956 0050 08       		.byte	0x8
 957 0051 05       		.byte	0x5
 958 0052 9B000000 		.4byte	.LASF6
 959 0056 02       		.uleb128 0x2
 960 0057 08       		.byte	0x8
 961 0058 07       		.byte	0x7
 962 0059 73000000 		.4byte	.LASF7
 963 005d 03       		.uleb128 0x3
 964 005e 04       		.byte	0x4
 965 005f 05       		.byte	0x5
 966 0060 696E7400 		.ascii	"int\000"
 967 0064 02       		.uleb128 0x2
 968 0065 04       		.byte	0x4
 969 0066 07       		.byte	0x7
 970 0067 45010000 		.4byte	.LASF8
 971 006b 04       		.uleb128 0x4
 972 006c FD000000 		.4byte	.LASF9
 973 0070 02       		.byte	0x2
 974 0071 9801     		.2byte	0x198
 975 0073 2C000000 		.4byte	0x2c
 976 0077 04       		.uleb128 0x4
 977 0078 00000000 		.4byte	.LASF10
 978 007c 02       		.byte	0x2
 979 007d 9901     		.2byte	0x199
 980 007f 3A000000 		.4byte	0x3a
 981 0083 04       		.uleb128 0x4
 982 0084 14010000 		.4byte	.LASF11
 983 0088 02       		.byte	0x2
 984 0089 9A01     		.2byte	0x19a
 985 008b 48000000 		.4byte	0x48
 986 008f 04       		.uleb128 0x4
 987 0090 9B030000 		.4byte	.LASF12
 988 0094 02       		.byte	0x2
 989 0095 9C01     		.2byte	0x19c
 990 0097 33000000 		.4byte	0x33
 991 009b 04       		.uleb128 0x4
 992 009c BC000000 		.4byte	.LASF13
 993 00a0 02       		.byte	0x2
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 34


 994 00a1 9D01     		.2byte	0x19d
 995 00a3 41000000 		.4byte	0x41
 996 00a7 04       		.uleb128 0x4
 997 00a8 C9010000 		.4byte	.LASF14
 998 00ac 02       		.byte	0x2
 999 00ad 9E01     		.2byte	0x19e
 1000 00af B3000000 		.4byte	0xb3
 1001 00b3 02       		.uleb128 0x2
 1002 00b4 04       		.byte	0x4
 1003 00b5 04       		.byte	0x4
 1004 00b6 C9020000 		.4byte	.LASF15
 1005 00ba 02       		.uleb128 0x2
 1006 00bb 08       		.byte	0x8
 1007 00bc 04       		.byte	0x4
 1008 00bd 0D010000 		.4byte	.LASF16
 1009 00c1 04       		.uleb128 0x4
 1010 00c2 96020000 		.4byte	.LASF17
 1011 00c6 02       		.byte	0x2
 1012 00c7 A301     		.2byte	0x1a3
 1013 00c9 4F000000 		.4byte	0x4f
 1014 00cd 02       		.uleb128 0x2
 1015 00ce 01       		.byte	0x1
 1016 00cf 08       		.byte	0x8
 1017 00d0 5A030000 		.4byte	.LASF18
 1018 00d4 04       		.uleb128 0x4
 1019 00d5 C3010000 		.4byte	.LASF19
 1020 00d9 02       		.byte	0x2
 1021 00da 4402     		.2byte	0x244
 1022 00dc E0000000 		.4byte	0xe0
 1023 00e0 05       		.uleb128 0x5
 1024 00e1 83000000 		.4byte	0x83
 1025 00e5 04       		.uleb128 0x4
 1026 00e6 5F030000 		.4byte	.LASF20
 1027 00ea 02       		.byte	0x2
 1028 00eb 5402     		.2byte	0x254
 1029 00ed F1000000 		.4byte	0xf1
 1030 00f1 06       		.uleb128 0x6
 1031 00f2 04       		.byte	0x4
 1032 00f3 F7000000 		.4byte	0xf7
 1033 00f7 07       		.uleb128 0x7
 1034 00f8 02       		.uleb128 0x2
 1035 00f9 04       		.byte	0x4
 1036 00fa 07       		.byte	0x7
 1037 00fb D1010000 		.4byte	.LASF21
 1038 00ff 08       		.uleb128 0x8
 1039 0100 6A000000 		.4byte	.LASF25
 1040 0104 01       		.byte	0x1
 1041 0105 5E       		.byte	0x5e
 1042 0106 00000000 		.4byte	.LFB1
 1043 010a 00010000 		.4byte	.LFE1-.LFB1
 1044 010e 01       		.uleb128 0x1
 1045 010f 9C       		.byte	0x9c
 1046 0110 69010000 		.4byte	0x169
 1047 0114 09       		.uleb128 0x9
 1048 0115 4F030000 		.4byte	.LASF22
 1049 0119 01       		.byte	0x1
 1050 011a 60       		.byte	0x60
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 35


 1051 011b 83000000 		.4byte	0x83
 1052 011f 00000000 		.4byte	.LLST0
 1053 0123 09       		.uleb128 0x9
 1054 0124 80010000 		.4byte	.LASF23
 1055 0128 01       		.byte	0x1
 1056 0129 61       		.byte	0x61
 1057 012a 83000000 		.4byte	0x83
 1058 012e 1F000000 		.4byte	.LLST1
 1059 0132 09       		.uleb128 0x9
 1060 0133 0F000000 		.4byte	.LASF24
 1061 0137 01       		.byte	0x1
 1062 0138 62       		.byte	0x62
 1063 0139 9B000000 		.4byte	0x9b
 1064 013d 60000000 		.4byte	.LLST2
 1065 0141 0A       		.uleb128 0xa
 1066 0142 0A000000 		.4byte	.LVL0
 1067 0146 49050000 		.4byte	0x549
 1068 014a 59010000 		.4byte	0x159
 1069 014e 0B       		.uleb128 0xb
 1070 014f 01       		.uleb128 0x1
 1071 0150 51       		.byte	0x51
 1072 0151 01       		.uleb128 0x1
 1073 0152 33       		.byte	0x33
 1074 0153 0B       		.uleb128 0xb
 1075 0154 01       		.uleb128 0x1
 1076 0155 50       		.byte	0x50
 1077 0156 01       		.uleb128 0x1
 1078 0157 3E       		.byte	0x3e
 1079 0158 00       		.byte	0
 1080 0159 0C       		.uleb128 0xc
 1081 015a 12000000 		.4byte	.LVL1
 1082 015e 5F050000 		.4byte	0x55f
 1083 0162 0B       		.uleb128 0xb
 1084 0163 01       		.uleb128 0x1
 1085 0164 50       		.byte	0x50
 1086 0165 01       		.uleb128 0x1
 1087 0166 3E       		.byte	0x3e
 1088 0167 00       		.byte	0
 1089 0168 00       		.byte	0
 1090 0169 0D       		.uleb128 0xd
 1091 016a 90030000 		.4byte	.LASF26
 1092 016e 01       		.byte	0x1
 1093 016f 4A01     		.2byte	0x14a
 1094 0171 00000000 		.4byte	.LFB2
 1095 0175 24000000 		.4byte	.LFE2-.LFB2
 1096 0179 01       		.uleb128 0x1
 1097 017a 9C       		.byte	0x9c
 1098 017b 8F010000 		.4byte	0x18f
 1099 017f 0C       		.uleb128 0xc
 1100 0180 1C000000 		.4byte	.LVL10
 1101 0184 79050000 		.4byte	0x579
 1102 0188 0B       		.uleb128 0xb
 1103 0189 01       		.uleb128 0x1
 1104 018a 50       		.byte	0x50
 1105 018b 01       		.uleb128 0x1
 1106 018c 3A       		.byte	0x3a
 1107 018d 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 36


 1108 018e 00       		.byte	0
 1109 018f 08       		.uleb128 0x8
 1110 0190 C2000000 		.4byte	.LASF27
 1111 0194 01       		.byte	0x1
 1112 0195 3F       		.byte	0x3f
 1113 0196 00000000 		.4byte	.LFB0
 1114 019a 20000000 		.4byte	.LFE0-.LFB0
 1115 019e 01       		.uleb128 0x1
 1116 019f 9C       		.byte	0x9c
 1117 01a0 B7010000 		.4byte	0x1b7
 1118 01a4 0E       		.uleb128 0xe
 1119 01a5 0E000000 		.4byte	.LVL11
 1120 01a9 FF000000 		.4byte	0xff
 1121 01ad 0E       		.uleb128 0xe
 1122 01ae 18000000 		.4byte	.LVL12
 1123 01b2 69010000 		.4byte	0x169
 1124 01b6 00       		.byte	0
 1125 01b7 0F       		.uleb128 0xf
 1126 01b8 46030000 		.4byte	.LASF28
 1127 01bc 01       		.byte	0x1
 1128 01bd 6D01     		.2byte	0x16d
 1129 01bf 00000000 		.4byte	.LFB3
 1130 01c3 10000000 		.4byte	.LFE3-.LFB3
 1131 01c7 01       		.uleb128 0x1
 1132 01c8 9C       		.byte	0x9c
 1133 01c9 0F       		.uleb128 0xf
 1134 01ca 8A000000 		.4byte	.LASF29
 1135 01ce 01       		.byte	0x1
 1136 01cf 8701     		.2byte	0x187
 1137 01d1 00000000 		.4byte	.LFB4
 1138 01d5 14000000 		.4byte	.LFE4-.LFB4
 1139 01d9 01       		.uleb128 0x1
 1140 01da 9C       		.byte	0x9c
 1141 01db 0F       		.uleb128 0xf
 1142 01dc AC010000 		.4byte	.LASF30
 1143 01e0 01       		.byte	0x1
 1144 01e1 A001     		.2byte	0x1a0
 1145 01e3 00000000 		.4byte	.LFB5
 1146 01e7 14000000 		.4byte	.LFE5-.LFB5
 1147 01eb 01       		.uleb128 0x1
 1148 01ec 9C       		.byte	0x9c
 1149 01ed 10       		.uleb128 0x10
 1150 01ee F4010000 		.4byte	.LASF32
 1151 01f2 01       		.byte	0x1
 1152 01f3 C201     		.2byte	0x1c2
 1153 01f5 83000000 		.4byte	0x83
 1154 01f9 00000000 		.4byte	.LFB6
 1155 01fd 28000000 		.4byte	.LFE6-.LFB6
 1156 0201 01       		.uleb128 0x1
 1157 0202 9C       		.byte	0x9c
 1158 0203 28020000 		.4byte	0x228
 1159 0207 11       		.uleb128 0x11
 1160 0208 2C010000 		.4byte	.LASF34
 1161 020c 01       		.byte	0x1
 1162 020d C201     		.2byte	0x1c2
 1163 020f 83000000 		.4byte	0x83
 1164 0213 76000000 		.4byte	.LLST3
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 37


 1165 0217 12       		.uleb128 0x12
 1166 0218 B5000000 		.4byte	.LASF31
 1167 021c 01       		.byte	0x1
 1168 021d C401     		.2byte	0x1c4
 1169 021f 83000000 		.4byte	0x83
 1170 0223 BB000000 		.4byte	.LLST4
 1171 0227 00       		.byte	0
 1172 0228 10       		.uleb128 0x10
 1173 0229 B6030000 		.4byte	.LASF33
 1174 022d 01       		.byte	0x1
 1175 022e F801     		.2byte	0x1f8
 1176 0230 8F000000 		.4byte	0x8f
 1177 0234 00000000 		.4byte	.LFB7
 1178 0238 2C000000 		.4byte	.LFE7-.LFB7
 1179 023c 01       		.uleb128 0x1
 1180 023d 9C       		.byte	0x9c
 1181 023e 72020000 		.4byte	0x272
 1182 0242 11       		.uleb128 0x11
 1183 0243 55030000 		.4byte	.LASF35
 1184 0247 01       		.byte	0x1
 1185 0248 F801     		.2byte	0x1f8
 1186 024a 83000000 		.4byte	0x83
 1187 024e F1000000 		.4byte	.LLST5
 1188 0252 12       		.uleb128 0x12
 1189 0253 AF030000 		.4byte	.LASF36
 1190 0257 01       		.byte	0x1
 1191 0258 FA01     		.2byte	0x1fa
 1192 025a 83000000 		.4byte	0x83
 1193 025e 36010000 		.4byte	.LLST6
 1194 0262 0C       		.uleb128 0xc
 1195 0263 0C000000 		.4byte	.LVL22
 1196 0267 8A050000 		.4byte	0x58a
 1197 026b 0B       		.uleb128 0xb
 1198 026c 01       		.uleb128 0x1
 1199 026d 50       		.byte	0x50
 1200 026e 01       		.uleb128 0x1
 1201 026f 30       		.byte	0x30
 1202 0270 00       		.byte	0
 1203 0271 00       		.byte	0
 1204 0272 0D       		.uleb128 0xd
 1205 0273 AD020000 		.4byte	.LASF37
 1206 0277 01       		.byte	0x1
 1207 0278 2502     		.2byte	0x225
 1208 027a 00000000 		.4byte	.LFB8
 1209 027e 10000000 		.4byte	.LFE8-.LFB8
 1210 0282 01       		.uleb128 0x1
 1211 0283 9C       		.byte	0x9c
 1212 0284 99020000 		.4byte	0x299
 1213 0288 11       		.uleb128 0x11
 1214 0289 1B010000 		.4byte	.LASF38
 1215 028d 01       		.byte	0x1
 1216 028e 2502     		.2byte	0x225
 1217 0290 83000000 		.4byte	0x83
 1218 0294 54010000 		.4byte	.LLST7
 1219 0298 00       		.byte	0
 1220 0299 0D       		.uleb128 0xd
 1221 029a ED020000 		.4byte	.LASF39
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 38


 1222 029e 01       		.byte	0x1
 1223 029f 5102     		.2byte	0x251
 1224 02a1 00000000 		.4byte	.LFB9
 1225 02a5 1C000000 		.4byte	.LFE9-.LFB9
 1226 02a9 01       		.uleb128 0x1
 1227 02aa 9C       		.byte	0x9c
 1228 02ab C0020000 		.4byte	0x2c0
 1229 02af 11       		.uleb128 0x11
 1230 02b0 DA010000 		.4byte	.LASF40
 1231 02b4 01       		.byte	0x1
 1232 02b5 5102     		.2byte	0x251
 1233 02b7 83000000 		.4byte	0x83
 1234 02bb 75010000 		.4byte	.LLST8
 1235 02bf 00       		.byte	0
 1236 02c0 0D       		.uleb128 0xd
 1237 02c1 E3010000 		.4byte	.LASF41
 1238 02c5 01       		.byte	0x1
 1239 02c6 6602     		.2byte	0x266
 1240 02c8 00000000 		.4byte	.LFB10
 1241 02cc 18000000 		.4byte	.LFE10-.LFB10
 1242 02d0 01       		.uleb128 0x1
 1243 02d1 9C       		.byte	0x9c
 1244 02d2 E7020000 		.4byte	0x2e7
 1245 02d6 11       		.uleb128 0x11
 1246 02d7 CF020000 		.4byte	.LASF42
 1247 02db 01       		.byte	0x1
 1248 02dc 6602     		.2byte	0x266
 1249 02de 83000000 		.4byte	0x83
 1250 02e2 96010000 		.4byte	.LLST9
 1251 02e6 00       		.byte	0
 1252 02e7 0D       		.uleb128 0xd
 1253 02e8 34010000 		.4byte	.LASF43
 1254 02ec 01       		.byte	0x1
 1255 02ed 7E02     		.2byte	0x27e
 1256 02ef 00000000 		.4byte	.LFB11
 1257 02f3 10000000 		.4byte	.LFE11-.LFB11
 1258 02f7 01       		.uleb128 0x1
 1259 02f8 9C       		.byte	0x9c
 1260 02f9 0E030000 		.4byte	0x30e
 1261 02fd 11       		.uleb128 0x11
 1262 02fe 1B010000 		.4byte	.LASF38
 1263 0302 01       		.byte	0x1
 1264 0303 7E02     		.2byte	0x27e
 1265 0305 83000000 		.4byte	0x83
 1266 0309 B7010000 		.4byte	.LLST10
 1267 030d 00       		.byte	0
 1268 030e 0D       		.uleb128 0xd
 1269 030f 6B010000 		.4byte	.LASF44
 1270 0313 01       		.byte	0x1
 1271 0314 9502     		.2byte	0x295
 1272 0316 00000000 		.4byte	.LFB12
 1273 031a 10000000 		.4byte	.LFE12-.LFB12
 1274 031e 01       		.uleb128 0x1
 1275 031f 9C       		.byte	0x9c
 1276 0320 35030000 		.4byte	0x335
 1277 0324 11       		.uleb128 0x11
 1278 0325 1B010000 		.4byte	.LASF38
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 39


 1279 0329 01       		.byte	0x1
 1280 032a 9502     		.2byte	0x295
 1281 032c 83000000 		.4byte	0x83
 1282 0330 D8010000 		.4byte	.LLST11
 1283 0334 00       		.byte	0
 1284 0335 0D       		.uleb128 0xd
 1285 0336 A1030000 		.4byte	.LASF45
 1286 033a 01       		.byte	0x1
 1287 033b B102     		.2byte	0x2b1
 1288 033d 00000000 		.4byte	.LFB13
 1289 0341 1C000000 		.4byte	.LFE13-.LFB13
 1290 0345 01       		.uleb128 0x1
 1291 0346 9C       		.byte	0x9c
 1292 0347 7B030000 		.4byte	0x37b
 1293 034b 11       		.uleb128 0x11
 1294 034c 55030000 		.4byte	.LASF35
 1295 0350 01       		.byte	0x1
 1296 0351 B102     		.2byte	0x2b1
 1297 0353 83000000 		.4byte	0x83
 1298 0357 F9010000 		.4byte	.LLST12
 1299 035b 11       		.uleb128 0x11
 1300 035c 7F030000 		.4byte	.LASF46
 1301 0360 01       		.byte	0x1
 1302 0361 B102     		.2byte	0x2b1
 1303 0363 8F000000 		.4byte	0x8f
 1304 0367 25020000 		.4byte	.LLST13
 1305 036b 0C       		.uleb128 0xc
 1306 036c 10000000 		.4byte	.LVL40
 1307 0370 8A050000 		.4byte	0x58a
 1308 0374 0B       		.uleb128 0xb
 1309 0375 01       		.uleb128 0x1
 1310 0376 50       		.byte	0x50
 1311 0377 01       		.uleb128 0x1
 1312 0378 30       		.byte	0x30
 1313 0379 00       		.byte	0
 1314 037a 00       		.byte	0
 1315 037b 0D       		.uleb128 0xd
 1316 037c BD020000 		.4byte	.LASF47
 1317 0380 01       		.byte	0x1
 1318 0381 D302     		.2byte	0x2d3
 1319 0383 00000000 		.4byte	.LFB14
 1320 0387 1C000000 		.4byte	.LFE14-.LFB14
 1321 038b 01       		.uleb128 0x1
 1322 038c 9C       		.byte	0x9c
 1323 038d C1030000 		.4byte	0x3c1
 1324 0391 11       		.uleb128 0x11
 1325 0392 55030000 		.4byte	.LASF35
 1326 0396 01       		.byte	0x1
 1327 0397 D302     		.2byte	0x2d3
 1328 0399 83000000 		.4byte	0x83
 1329 039d 46020000 		.4byte	.LLST14
 1330 03a1 11       		.uleb128 0x11
 1331 03a2 07000000 		.4byte	.LASF48
 1332 03a6 01       		.byte	0x1
 1333 03a7 D302     		.2byte	0x2d3
 1334 03a9 9B000000 		.4byte	0x9b
 1335 03ad 72020000 		.4byte	.LLST15
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 40


 1336 03b1 0C       		.uleb128 0xc
 1337 03b2 10000000 		.4byte	.LVL44
 1338 03b6 8A050000 		.4byte	0x58a
 1339 03ba 0B       		.uleb128 0xb
 1340 03bb 01       		.uleb128 0x1
 1341 03bc 50       		.byte	0x50
 1342 03bd 01       		.uleb128 0x1
 1343 03be 30       		.byte	0x30
 1344 03bf 00       		.byte	0
 1345 03c0 00       		.byte	0
 1346 03c1 13       		.uleb128 0x13
 1347 03c2 D9020000 		.4byte	.LASF49
 1348 03c6 01       		.byte	0x1
 1349 03c7 F402     		.2byte	0x2f4
 1350 03c9 8F000000 		.4byte	0x8f
 1351 03cd 00000000 		.4byte	.LFB15
 1352 03d1 5C000000 		.4byte	.LFE15-.LFB15
 1353 03d5 01       		.uleb128 0x1
 1354 03d6 9C       		.byte	0x9c
 1355 03d7 19040000 		.4byte	0x419
 1356 03db 11       		.uleb128 0x11
 1357 03dc 55030000 		.4byte	.LASF35
 1358 03e0 01       		.byte	0x1
 1359 03e1 F402     		.2byte	0x2f4
 1360 03e3 83000000 		.4byte	0x83
 1361 03e7 A2020000 		.4byte	.LLST16
 1362 03eb 11       		.uleb128 0x11
 1363 03ec 86030000 		.4byte	.LASF50
 1364 03f0 01       		.byte	0x1
 1365 03f1 F402     		.2byte	0x2f4
 1366 03f3 8F000000 		.4byte	0x8f
 1367 03f7 CE020000 		.4byte	.LLST17
 1368 03fb 14       		.uleb128 0x14
 1369 03fc BC010000 		.4byte	.LASF51
 1370 0400 01       		.byte	0x1
 1371 0401 F602     		.2byte	0x2f6
 1372 0403 8F000000 		.4byte	0x8f
 1373 0407 01       		.uleb128 0x1
 1374 0408 50       		.byte	0x50
 1375 0409 0C       		.uleb128 0xc
 1376 040a 10000000 		.4byte	.LVL49
 1377 040e 8A050000 		.4byte	0x58a
 1378 0412 0B       		.uleb128 0xb
 1379 0413 01       		.uleb128 0x1
 1380 0414 50       		.byte	0x50
 1381 0415 01       		.uleb128 0x1
 1382 0416 30       		.byte	0x30
 1383 0417 00       		.byte	0
 1384 0418 00       		.byte	0
 1385 0419 13       		.uleb128 0x13
 1386 041a D5000000 		.4byte	.LASF52
 1387 041e 01       		.byte	0x1
 1388 041f 2A03     		.2byte	0x32a
 1389 0421 9B000000 		.4byte	0x9b
 1390 0425 00000000 		.4byte	.LFB16
 1391 0429 40000000 		.4byte	.LFE16-.LFB16
 1392 042d 01       		.uleb128 0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 41


 1393 042e 9C       		.byte	0x9c
 1394 042f 6F040000 		.4byte	0x46f
 1395 0433 11       		.uleb128 0x11
 1396 0434 55030000 		.4byte	.LASF35
 1397 0438 01       		.byte	0x1
 1398 0439 2A03     		.2byte	0x32a
 1399 043b 83000000 		.4byte	0x83
 1400 043f 05030000 		.4byte	.LLST18
 1401 0443 11       		.uleb128 0x11
 1402 0444 86030000 		.4byte	.LASF50
 1403 0448 01       		.byte	0x1
 1404 0449 2A03     		.2byte	0x32a
 1405 044b 8F000000 		.4byte	0x8f
 1406 044f 31030000 		.4byte	.LLST19
 1407 0453 15       		.uleb128 0x15
 1408 0454 52010000 		.4byte	.LASF64
 1409 0458 01       		.byte	0x1
 1410 0459 2C03     		.2byte	0x32c
 1411 045b C1000000 		.4byte	0xc1
 1412 045f 0C       		.uleb128 0xc
 1413 0460 10000000 		.4byte	.LVL58
 1414 0464 8A050000 		.4byte	0x58a
 1415 0468 0B       		.uleb128 0xb
 1416 0469 01       		.uleb128 0x1
 1417 046a 50       		.byte	0x50
 1418 046b 01       		.uleb128 0x1
 1419 046c 30       		.byte	0x30
 1420 046d 00       		.byte	0
 1421 046e 00       		.byte	0
 1422 046f 13       		.uleb128 0x13
 1423 0470 16000000 		.4byte	.LASF53
 1424 0474 01       		.byte	0x1
 1425 0475 5703     		.2byte	0x357
 1426 0477 A7000000 		.4byte	0xa7
 1427 047b 00000000 		.4byte	.LFB17
 1428 047f 48000000 		.4byte	.LFE17-.LFB17
 1429 0483 01       		.uleb128 0x1
 1430 0484 9C       		.byte	0x9c
 1431 0485 C7040000 		.4byte	0x4c7
 1432 0489 11       		.uleb128 0x11
 1433 048a 55030000 		.4byte	.LASF35
 1434 048e 01       		.byte	0x1
 1435 048f 5703     		.2byte	0x357
 1436 0491 83000000 		.4byte	0x83
 1437 0495 5D030000 		.4byte	.LLST20
 1438 0499 11       		.uleb128 0x11
 1439 049a 86030000 		.4byte	.LASF50
 1440 049e 01       		.byte	0x1
 1441 049f 5703     		.2byte	0x357
 1442 04a1 8F000000 		.4byte	0x8f
 1443 04a5 89030000 		.4byte	.LLST21
 1444 04a9 14       		.uleb128 0x14
 1445 04aa 7A010000 		.4byte	.LASF54
 1446 04ae 01       		.byte	0x1
 1447 04af 5903     		.2byte	0x359
 1448 04b1 A7000000 		.4byte	0xa7
 1449 04b5 01       		.uleb128 0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 42


 1450 04b6 50       		.byte	0x50
 1451 04b7 0C       		.uleb128 0xc
 1452 04b8 10000000 		.4byte	.LVL65
 1453 04bc 8A050000 		.4byte	0x58a
 1454 04c0 0B       		.uleb128 0xb
 1455 04c1 01       		.uleb128 0x1
 1456 04c2 50       		.byte	0x50
 1457 04c3 01       		.uleb128 0x1
 1458 04c4 30       		.byte	0x30
 1459 04c5 00       		.byte	0
 1460 04c6 00       		.byte	0
 1461 04c7 16       		.uleb128 0x16
 1462 04c8 83000000 		.4byte	0x83
 1463 04cc D7040000 		.4byte	0x4d7
 1464 04d0 17       		.uleb128 0x17
 1465 04d1 F8000000 		.4byte	0xf8
 1466 04d5 00       		.byte	0
 1467 04d6 00       		.byte	0
 1468 04d7 18       		.uleb128 0x18
 1469 04d8 6C030000 		.4byte	.LASF55
 1470 04dc 01       		.byte	0x1
 1471 04dd 21       		.byte	0x21
 1472 04de E7040000 		.4byte	0x4e7
 1473 04e2 04       		.byte	0x4
 1474 04e3 00       		.byte	0
 1475 04e4 00       		.byte	0
 1476 04e5 00       		.byte	0
 1477 04e6 00       		.byte	0
 1478 04e7 19       		.uleb128 0x19
 1479 04e8 C7040000 		.4byte	0x4c7
 1480 04ec 1A       		.uleb128 0x1a
 1481 04ed 20010000 		.4byte	.LASF56
 1482 04f1 01       		.byte	0x1
 1483 04f2 18       		.byte	0x18
 1484 04f3 6B000000 		.4byte	0x6b
 1485 04f7 05       		.uleb128 0x5
 1486 04f8 03       		.byte	0x3
 1487 04f9 00000000 		.4byte	ADC_initVar
 1488 04fd 16       		.uleb128 0x16
 1489 04fe 8F000000 		.4byte	0x8f
 1490 0502 0D050000 		.4byte	0x50d
 1491 0506 17       		.uleb128 0x17
 1492 0507 F8000000 		.4byte	0xf8
 1493 050b 00       		.byte	0
 1494 050c 00       		.byte	0
 1495 050d 1A       		.uleb128 0x1a
 1496 050e 31030000 		.4byte	.LASF57
 1497 0512 01       		.byte	0x1
 1498 0513 19       		.byte	0x19
 1499 0514 1E050000 		.4byte	0x51e
 1500 0518 05       		.uleb128 0x5
 1501 0519 03       		.byte	0x3
 1502 051a 00000000 		.4byte	ADC_offset
 1503 051e 05       		.uleb128 0x5
 1504 051f FD040000 		.4byte	0x4fd
 1505 0523 16       		.uleb128 0x16
 1506 0524 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 43


 1507 0528 33050000 		.4byte	0x533
 1508 052c 17       		.uleb128 0x17
 1509 052d F8000000 		.4byte	0xf8
 1510 0531 00       		.byte	0
 1511 0532 00       		.byte	0
 1512 0533 1A       		.uleb128 0x1a
 1513 0534 E9000000 		.4byte	.LASF58
 1514 0538 01       		.byte	0x1
 1515 0539 1A       		.byte	0x1a
 1516 053a 44050000 		.4byte	0x544
 1517 053e 05       		.uleb128 0x5
 1518 053f 03       		.byte	0x3
 1519 0540 00000000 		.4byte	ADC_countsPer10Volt
 1520 0544 05       		.uleb128 0x5
 1521 0545 23050000 		.4byte	0x523
 1522 0549 1B       		.uleb128 0x1b
 1523 054a 9C020000 		.4byte	.LASF59
 1524 054e 03       		.byte	0x3
 1525 054f BE       		.byte	0xbe
 1526 0550 5F050000 		.4byte	0x55f
 1527 0554 1C       		.uleb128 0x1c
 1528 0555 6B000000 		.4byte	0x6b
 1529 0559 1C       		.uleb128 0x1c
 1530 055a 6B000000 		.4byte	0x6b
 1531 055e 00       		.byte	0
 1532 055f 1D       		.uleb128 0x1d
 1533 0560 9D010000 		.4byte	.LASF65
 1534 0564 03       		.byte	0x3
 1535 0565 BB       		.byte	0xbb
 1536 0566 E5000000 		.4byte	0xe5
 1537 056a 79050000 		.4byte	0x579
 1538 056e 1C       		.uleb128 0x1c
 1539 056f 6B000000 		.4byte	0x6b
 1540 0573 1C       		.uleb128 0x1c
 1541 0574 E5000000 		.4byte	0xe5
 1542 0578 00       		.byte	0
 1543 0579 1B       		.uleb128 0x1b
 1544 057a 03010000 		.4byte	.LASF60
 1545 057e 03       		.byte	0x3
 1546 057f D8       		.byte	0xd8
 1547 0580 8A050000 		.4byte	0x58a
 1548 0584 1C       		.uleb128 0x1c
 1549 0585 77000000 		.4byte	0x77
 1550 0589 00       		.byte	0
 1551 058a 1E       		.uleb128 0x1e
 1552 058b FD020000 		.4byte	.LASF66
 1553 058f 03       		.byte	0x3
 1554 0590 E5       		.byte	0xe5
 1555 0591 1C       		.uleb128 0x1c
 1556 0592 6B000000 		.4byte	0x6b
 1557 0596 00       		.byte	0
 1558 0597 00       		.byte	0
 1559              		.section	.debug_abbrev,"",%progbits
 1560              	.Ldebug_abbrev0:
 1561 0000 01       		.uleb128 0x1
 1562 0001 11       		.uleb128 0x11
 1563 0002 01       		.byte	0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 44


 1564 0003 25       		.uleb128 0x25
 1565 0004 0E       		.uleb128 0xe
 1566 0005 13       		.uleb128 0x13
 1567 0006 0B       		.uleb128 0xb
 1568 0007 03       		.uleb128 0x3
 1569 0008 0E       		.uleb128 0xe
 1570 0009 1B       		.uleb128 0x1b
 1571 000a 0E       		.uleb128 0xe
 1572 000b 55       		.uleb128 0x55
 1573 000c 17       		.uleb128 0x17
 1574 000d 11       		.uleb128 0x11
 1575 000e 01       		.uleb128 0x1
 1576 000f 10       		.uleb128 0x10
 1577 0010 17       		.uleb128 0x17
 1578 0011 00       		.byte	0
 1579 0012 00       		.byte	0
 1580 0013 02       		.uleb128 0x2
 1581 0014 24       		.uleb128 0x24
 1582 0015 00       		.byte	0
 1583 0016 0B       		.uleb128 0xb
 1584 0017 0B       		.uleb128 0xb
 1585 0018 3E       		.uleb128 0x3e
 1586 0019 0B       		.uleb128 0xb
 1587 001a 03       		.uleb128 0x3
 1588 001b 0E       		.uleb128 0xe
 1589 001c 00       		.byte	0
 1590 001d 00       		.byte	0
 1591 001e 03       		.uleb128 0x3
 1592 001f 24       		.uleb128 0x24
 1593 0020 00       		.byte	0
 1594 0021 0B       		.uleb128 0xb
 1595 0022 0B       		.uleb128 0xb
 1596 0023 3E       		.uleb128 0x3e
 1597 0024 0B       		.uleb128 0xb
 1598 0025 03       		.uleb128 0x3
 1599 0026 08       		.uleb128 0x8
 1600 0027 00       		.byte	0
 1601 0028 00       		.byte	0
 1602 0029 04       		.uleb128 0x4
 1603 002a 16       		.uleb128 0x16
 1604 002b 00       		.byte	0
 1605 002c 03       		.uleb128 0x3
 1606 002d 0E       		.uleb128 0xe
 1607 002e 3A       		.uleb128 0x3a
 1608 002f 0B       		.uleb128 0xb
 1609 0030 3B       		.uleb128 0x3b
 1610 0031 05       		.uleb128 0x5
 1611 0032 49       		.uleb128 0x49
 1612 0033 13       		.uleb128 0x13
 1613 0034 00       		.byte	0
 1614 0035 00       		.byte	0
 1615 0036 05       		.uleb128 0x5
 1616 0037 35       		.uleb128 0x35
 1617 0038 00       		.byte	0
 1618 0039 49       		.uleb128 0x49
 1619 003a 13       		.uleb128 0x13
 1620 003b 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 45


 1621 003c 00       		.byte	0
 1622 003d 06       		.uleb128 0x6
 1623 003e 0F       		.uleb128 0xf
 1624 003f 00       		.byte	0
 1625 0040 0B       		.uleb128 0xb
 1626 0041 0B       		.uleb128 0xb
 1627 0042 49       		.uleb128 0x49
 1628 0043 13       		.uleb128 0x13
 1629 0044 00       		.byte	0
 1630 0045 00       		.byte	0
 1631 0046 07       		.uleb128 0x7
 1632 0047 15       		.uleb128 0x15
 1633 0048 00       		.byte	0
 1634 0049 27       		.uleb128 0x27
 1635 004a 19       		.uleb128 0x19
 1636 004b 00       		.byte	0
 1637 004c 00       		.byte	0
 1638 004d 08       		.uleb128 0x8
 1639 004e 2E       		.uleb128 0x2e
 1640 004f 01       		.byte	0x1
 1641 0050 3F       		.uleb128 0x3f
 1642 0051 19       		.uleb128 0x19
 1643 0052 03       		.uleb128 0x3
 1644 0053 0E       		.uleb128 0xe
 1645 0054 3A       		.uleb128 0x3a
 1646 0055 0B       		.uleb128 0xb
 1647 0056 3B       		.uleb128 0x3b
 1648 0057 0B       		.uleb128 0xb
 1649 0058 27       		.uleb128 0x27
 1650 0059 19       		.uleb128 0x19
 1651 005a 11       		.uleb128 0x11
 1652 005b 01       		.uleb128 0x1
 1653 005c 12       		.uleb128 0x12
 1654 005d 06       		.uleb128 0x6
 1655 005e 40       		.uleb128 0x40
 1656 005f 18       		.uleb128 0x18
 1657 0060 9742     		.uleb128 0x2117
 1658 0062 19       		.uleb128 0x19
 1659 0063 01       		.uleb128 0x1
 1660 0064 13       		.uleb128 0x13
 1661 0065 00       		.byte	0
 1662 0066 00       		.byte	0
 1663 0067 09       		.uleb128 0x9
 1664 0068 34       		.uleb128 0x34
 1665 0069 00       		.byte	0
 1666 006a 03       		.uleb128 0x3
 1667 006b 0E       		.uleb128 0xe
 1668 006c 3A       		.uleb128 0x3a
 1669 006d 0B       		.uleb128 0xb
 1670 006e 3B       		.uleb128 0x3b
 1671 006f 0B       		.uleb128 0xb
 1672 0070 49       		.uleb128 0x49
 1673 0071 13       		.uleb128 0x13
 1674 0072 02       		.uleb128 0x2
 1675 0073 17       		.uleb128 0x17
 1676 0074 00       		.byte	0
 1677 0075 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 46


 1678 0076 0A       		.uleb128 0xa
 1679 0077 898201   		.uleb128 0x4109
 1680 007a 01       		.byte	0x1
 1681 007b 11       		.uleb128 0x11
 1682 007c 01       		.uleb128 0x1
 1683 007d 31       		.uleb128 0x31
 1684 007e 13       		.uleb128 0x13
 1685 007f 01       		.uleb128 0x1
 1686 0080 13       		.uleb128 0x13
 1687 0081 00       		.byte	0
 1688 0082 00       		.byte	0
 1689 0083 0B       		.uleb128 0xb
 1690 0084 8A8201   		.uleb128 0x410a
 1691 0087 00       		.byte	0
 1692 0088 02       		.uleb128 0x2
 1693 0089 18       		.uleb128 0x18
 1694 008a 9142     		.uleb128 0x2111
 1695 008c 18       		.uleb128 0x18
 1696 008d 00       		.byte	0
 1697 008e 00       		.byte	0
 1698 008f 0C       		.uleb128 0xc
 1699 0090 898201   		.uleb128 0x4109
 1700 0093 01       		.byte	0x1
 1701 0094 11       		.uleb128 0x11
 1702 0095 01       		.uleb128 0x1
 1703 0096 31       		.uleb128 0x31
 1704 0097 13       		.uleb128 0x13
 1705 0098 00       		.byte	0
 1706 0099 00       		.byte	0
 1707 009a 0D       		.uleb128 0xd
 1708 009b 2E       		.uleb128 0x2e
 1709 009c 01       		.byte	0x1
 1710 009d 3F       		.uleb128 0x3f
 1711 009e 19       		.uleb128 0x19
 1712 009f 03       		.uleb128 0x3
 1713 00a0 0E       		.uleb128 0xe
 1714 00a1 3A       		.uleb128 0x3a
 1715 00a2 0B       		.uleb128 0xb
 1716 00a3 3B       		.uleb128 0x3b
 1717 00a4 05       		.uleb128 0x5
 1718 00a5 27       		.uleb128 0x27
 1719 00a6 19       		.uleb128 0x19
 1720 00a7 11       		.uleb128 0x11
 1721 00a8 01       		.uleb128 0x1
 1722 00a9 12       		.uleb128 0x12
 1723 00aa 06       		.uleb128 0x6
 1724 00ab 40       		.uleb128 0x40
 1725 00ac 18       		.uleb128 0x18
 1726 00ad 9742     		.uleb128 0x2117
 1727 00af 19       		.uleb128 0x19
 1728 00b0 01       		.uleb128 0x1
 1729 00b1 13       		.uleb128 0x13
 1730 00b2 00       		.byte	0
 1731 00b3 00       		.byte	0
 1732 00b4 0E       		.uleb128 0xe
 1733 00b5 898201   		.uleb128 0x4109
 1734 00b8 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 47


 1735 00b9 11       		.uleb128 0x11
 1736 00ba 01       		.uleb128 0x1
 1737 00bb 31       		.uleb128 0x31
 1738 00bc 13       		.uleb128 0x13
 1739 00bd 00       		.byte	0
 1740 00be 00       		.byte	0
 1741 00bf 0F       		.uleb128 0xf
 1742 00c0 2E       		.uleb128 0x2e
 1743 00c1 00       		.byte	0
 1744 00c2 3F       		.uleb128 0x3f
 1745 00c3 19       		.uleb128 0x19
 1746 00c4 03       		.uleb128 0x3
 1747 00c5 0E       		.uleb128 0xe
 1748 00c6 3A       		.uleb128 0x3a
 1749 00c7 0B       		.uleb128 0xb
 1750 00c8 3B       		.uleb128 0x3b
 1751 00c9 05       		.uleb128 0x5
 1752 00ca 27       		.uleb128 0x27
 1753 00cb 19       		.uleb128 0x19
 1754 00cc 11       		.uleb128 0x11
 1755 00cd 01       		.uleb128 0x1
 1756 00ce 12       		.uleb128 0x12
 1757 00cf 06       		.uleb128 0x6
 1758 00d0 40       		.uleb128 0x40
 1759 00d1 18       		.uleb128 0x18
 1760 00d2 9742     		.uleb128 0x2117
 1761 00d4 19       		.uleb128 0x19
 1762 00d5 00       		.byte	0
 1763 00d6 00       		.byte	0
 1764 00d7 10       		.uleb128 0x10
 1765 00d8 2E       		.uleb128 0x2e
 1766 00d9 01       		.byte	0x1
 1767 00da 3F       		.uleb128 0x3f
 1768 00db 19       		.uleb128 0x19
 1769 00dc 03       		.uleb128 0x3
 1770 00dd 0E       		.uleb128 0xe
 1771 00de 3A       		.uleb128 0x3a
 1772 00df 0B       		.uleb128 0xb
 1773 00e0 3B       		.uleb128 0x3b
 1774 00e1 05       		.uleb128 0x5
 1775 00e2 27       		.uleb128 0x27
 1776 00e3 19       		.uleb128 0x19
 1777 00e4 49       		.uleb128 0x49
 1778 00e5 13       		.uleb128 0x13
 1779 00e6 11       		.uleb128 0x11
 1780 00e7 01       		.uleb128 0x1
 1781 00e8 12       		.uleb128 0x12
 1782 00e9 06       		.uleb128 0x6
 1783 00ea 40       		.uleb128 0x40
 1784 00eb 18       		.uleb128 0x18
 1785 00ec 9742     		.uleb128 0x2117
 1786 00ee 19       		.uleb128 0x19
 1787 00ef 01       		.uleb128 0x1
 1788 00f0 13       		.uleb128 0x13
 1789 00f1 00       		.byte	0
 1790 00f2 00       		.byte	0
 1791 00f3 11       		.uleb128 0x11
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 48


 1792 00f4 05       		.uleb128 0x5
 1793 00f5 00       		.byte	0
 1794 00f6 03       		.uleb128 0x3
 1795 00f7 0E       		.uleb128 0xe
 1796 00f8 3A       		.uleb128 0x3a
 1797 00f9 0B       		.uleb128 0xb
 1798 00fa 3B       		.uleb128 0x3b
 1799 00fb 05       		.uleb128 0x5
 1800 00fc 49       		.uleb128 0x49
 1801 00fd 13       		.uleb128 0x13
 1802 00fe 02       		.uleb128 0x2
 1803 00ff 17       		.uleb128 0x17
 1804 0100 00       		.byte	0
 1805 0101 00       		.byte	0
 1806 0102 12       		.uleb128 0x12
 1807 0103 34       		.uleb128 0x34
 1808 0104 00       		.byte	0
 1809 0105 03       		.uleb128 0x3
 1810 0106 0E       		.uleb128 0xe
 1811 0107 3A       		.uleb128 0x3a
 1812 0108 0B       		.uleb128 0xb
 1813 0109 3B       		.uleb128 0x3b
 1814 010a 05       		.uleb128 0x5
 1815 010b 49       		.uleb128 0x49
 1816 010c 13       		.uleb128 0x13
 1817 010d 02       		.uleb128 0x2
 1818 010e 17       		.uleb128 0x17
 1819 010f 00       		.byte	0
 1820 0110 00       		.byte	0
 1821 0111 13       		.uleb128 0x13
 1822 0112 2E       		.uleb128 0x2e
 1823 0113 01       		.byte	0x1
 1824 0114 3F       		.uleb128 0x3f
 1825 0115 19       		.uleb128 0x19
 1826 0116 03       		.uleb128 0x3
 1827 0117 0E       		.uleb128 0xe
 1828 0118 3A       		.uleb128 0x3a
 1829 0119 0B       		.uleb128 0xb
 1830 011a 3B       		.uleb128 0x3b
 1831 011b 05       		.uleb128 0x5
 1832 011c 27       		.uleb128 0x27
 1833 011d 19       		.uleb128 0x19
 1834 011e 49       		.uleb128 0x49
 1835 011f 13       		.uleb128 0x13
 1836 0120 11       		.uleb128 0x11
 1837 0121 01       		.uleb128 0x1
 1838 0122 12       		.uleb128 0x12
 1839 0123 06       		.uleb128 0x6
 1840 0124 40       		.uleb128 0x40
 1841 0125 18       		.uleb128 0x18
 1842 0126 9642     		.uleb128 0x2116
 1843 0128 19       		.uleb128 0x19
 1844 0129 01       		.uleb128 0x1
 1845 012a 13       		.uleb128 0x13
 1846 012b 00       		.byte	0
 1847 012c 00       		.byte	0
 1848 012d 14       		.uleb128 0x14
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 49


 1849 012e 34       		.uleb128 0x34
 1850 012f 00       		.byte	0
 1851 0130 03       		.uleb128 0x3
 1852 0131 0E       		.uleb128 0xe
 1853 0132 3A       		.uleb128 0x3a
 1854 0133 0B       		.uleb128 0xb
 1855 0134 3B       		.uleb128 0x3b
 1856 0135 05       		.uleb128 0x5
 1857 0136 49       		.uleb128 0x49
 1858 0137 13       		.uleb128 0x13
 1859 0138 02       		.uleb128 0x2
 1860 0139 18       		.uleb128 0x18
 1861 013a 00       		.byte	0
 1862 013b 00       		.byte	0
 1863 013c 15       		.uleb128 0x15
 1864 013d 34       		.uleb128 0x34
 1865 013e 00       		.byte	0
 1866 013f 03       		.uleb128 0x3
 1867 0140 0E       		.uleb128 0xe
 1868 0141 3A       		.uleb128 0x3a
 1869 0142 0B       		.uleb128 0xb
 1870 0143 3B       		.uleb128 0x3b
 1871 0144 05       		.uleb128 0x5
 1872 0145 49       		.uleb128 0x49
 1873 0146 13       		.uleb128 0x13
 1874 0147 00       		.byte	0
 1875 0148 00       		.byte	0
 1876 0149 16       		.uleb128 0x16
 1877 014a 01       		.uleb128 0x1
 1878 014b 01       		.byte	0x1
 1879 014c 49       		.uleb128 0x49
 1880 014d 13       		.uleb128 0x13
 1881 014e 01       		.uleb128 0x1
 1882 014f 13       		.uleb128 0x13
 1883 0150 00       		.byte	0
 1884 0151 00       		.byte	0
 1885 0152 17       		.uleb128 0x17
 1886 0153 21       		.uleb128 0x21
 1887 0154 00       		.byte	0
 1888 0155 49       		.uleb128 0x49
 1889 0156 13       		.uleb128 0x13
 1890 0157 2F       		.uleb128 0x2f
 1891 0158 0B       		.uleb128 0xb
 1892 0159 00       		.byte	0
 1893 015a 00       		.byte	0
 1894 015b 18       		.uleb128 0x18
 1895 015c 34       		.uleb128 0x34
 1896 015d 00       		.byte	0
 1897 015e 03       		.uleb128 0x3
 1898 015f 0E       		.uleb128 0xe
 1899 0160 3A       		.uleb128 0x3a
 1900 0161 0B       		.uleb128 0xb
 1901 0162 3B       		.uleb128 0x3b
 1902 0163 0B       		.uleb128 0xb
 1903 0164 49       		.uleb128 0x49
 1904 0165 13       		.uleb128 0x13
 1905 0166 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 50


 1906 0167 0A       		.uleb128 0xa
 1907 0168 00       		.byte	0
 1908 0169 00       		.byte	0
 1909 016a 19       		.uleb128 0x19
 1910 016b 26       		.uleb128 0x26
 1911 016c 00       		.byte	0
 1912 016d 49       		.uleb128 0x49
 1913 016e 13       		.uleb128 0x13
 1914 016f 00       		.byte	0
 1915 0170 00       		.byte	0
 1916 0171 1A       		.uleb128 0x1a
 1917 0172 34       		.uleb128 0x34
 1918 0173 00       		.byte	0
 1919 0174 03       		.uleb128 0x3
 1920 0175 0E       		.uleb128 0xe
 1921 0176 3A       		.uleb128 0x3a
 1922 0177 0B       		.uleb128 0xb
 1923 0178 3B       		.uleb128 0x3b
 1924 0179 0B       		.uleb128 0xb
 1925 017a 49       		.uleb128 0x49
 1926 017b 13       		.uleb128 0x13
 1927 017c 3F       		.uleb128 0x3f
 1928 017d 19       		.uleb128 0x19
 1929 017e 02       		.uleb128 0x2
 1930 017f 18       		.uleb128 0x18
 1931 0180 00       		.byte	0
 1932 0181 00       		.byte	0
 1933 0182 1B       		.uleb128 0x1b
 1934 0183 2E       		.uleb128 0x2e
 1935 0184 01       		.byte	0x1
 1936 0185 3F       		.uleb128 0x3f
 1937 0186 19       		.uleb128 0x19
 1938 0187 03       		.uleb128 0x3
 1939 0188 0E       		.uleb128 0xe
 1940 0189 3A       		.uleb128 0x3a
 1941 018a 0B       		.uleb128 0xb
 1942 018b 3B       		.uleb128 0x3b
 1943 018c 0B       		.uleb128 0xb
 1944 018d 27       		.uleb128 0x27
 1945 018e 19       		.uleb128 0x19
 1946 018f 3C       		.uleb128 0x3c
 1947 0190 19       		.uleb128 0x19
 1948 0191 01       		.uleb128 0x1
 1949 0192 13       		.uleb128 0x13
 1950 0193 00       		.byte	0
 1951 0194 00       		.byte	0
 1952 0195 1C       		.uleb128 0x1c
 1953 0196 05       		.uleb128 0x5
 1954 0197 00       		.byte	0
 1955 0198 49       		.uleb128 0x49
 1956 0199 13       		.uleb128 0x13
 1957 019a 00       		.byte	0
 1958 019b 00       		.byte	0
 1959 019c 1D       		.uleb128 0x1d
 1960 019d 2E       		.uleb128 0x2e
 1961 019e 01       		.byte	0x1
 1962 019f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 51


 1963 01a0 19       		.uleb128 0x19
 1964 01a1 03       		.uleb128 0x3
 1965 01a2 0E       		.uleb128 0xe
 1966 01a3 3A       		.uleb128 0x3a
 1967 01a4 0B       		.uleb128 0xb
 1968 01a5 3B       		.uleb128 0x3b
 1969 01a6 0B       		.uleb128 0xb
 1970 01a7 27       		.uleb128 0x27
 1971 01a8 19       		.uleb128 0x19
 1972 01a9 49       		.uleb128 0x49
 1973 01aa 13       		.uleb128 0x13
 1974 01ab 3C       		.uleb128 0x3c
 1975 01ac 19       		.uleb128 0x19
 1976 01ad 01       		.uleb128 0x1
 1977 01ae 13       		.uleb128 0x13
 1978 01af 00       		.byte	0
 1979 01b0 00       		.byte	0
 1980 01b1 1E       		.uleb128 0x1e
 1981 01b2 2E       		.uleb128 0x2e
 1982 01b3 01       		.byte	0x1
 1983 01b4 3F       		.uleb128 0x3f
 1984 01b5 19       		.uleb128 0x19
 1985 01b6 03       		.uleb128 0x3
 1986 01b7 0E       		.uleb128 0xe
 1987 01b8 3A       		.uleb128 0x3a
 1988 01b9 0B       		.uleb128 0xb
 1989 01ba 3B       		.uleb128 0x3b
 1990 01bb 0B       		.uleb128 0xb
 1991 01bc 27       		.uleb128 0x27
 1992 01bd 19       		.uleb128 0x19
 1993 01be 3C       		.uleb128 0x3c
 1994 01bf 19       		.uleb128 0x19
 1995 01c0 00       		.byte	0
 1996 01c1 00       		.byte	0
 1997 01c2 00       		.byte	0
 1998              		.section	.debug_loc,"",%progbits
 1999              	.Ldebug_loc0:
 2000              	.LLST0:
 2001 0000 76000000 		.4byte	.LVL5
 2002 0004 7A000000 		.4byte	.LVL7
 2003 0008 0200     		.2byte	0x2
 2004 000a 30       		.byte	0x30
 2005 000b 9F       		.byte	0x9f
 2006 000c 7A000000 		.4byte	.LVL7
 2007 0010 00010000 		.4byte	.LFE1
 2008 0014 0100     		.2byte	0x1
 2009 0016 53       		.byte	0x53
 2010 0017 00000000 		.4byte	0
 2011 001b 00000000 		.4byte	0
 2012              	.LLST1:
 2013 001f 6E000000 		.4byte	.LVL2
 2014 0023 72000000 		.4byte	.LVL3
 2015 0027 0100     		.2byte	0x1
 2016 0029 50       		.byte	0x50
 2017 002a 72000000 		.4byte	.LVL3
 2018 002e 74000000 		.4byte	.LVL4
 2019 0032 0100     		.2byte	0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 52


 2020 0034 52       		.byte	0x52
 2021 0035 74000000 		.4byte	.LVL4
 2022 0039 78000000 		.4byte	.LVL6
 2023 003d 0100     		.2byte	0x1
 2024 003f 53       		.byte	0x53
 2025 0040 78000000 		.4byte	.LVL6
 2026 0044 7A000000 		.4byte	.LVL7
 2027 0048 0200     		.2byte	0x2
 2028 004a 71       		.byte	0x71
 2029 004b 00       		.sleb128 0
 2030 004c 7A000000 		.4byte	.LVL7
 2031 0050 96000000 		.4byte	.LVL9
 2032 0054 0200     		.2byte	0x2
 2033 0056 30       		.byte	0x30
 2034 0057 9F       		.byte	0x9f
 2035 0058 00000000 		.4byte	0
 2036 005c 00000000 		.4byte	0
 2037              	.LLST2:
 2038 0060 86000000 		.4byte	.LVL8
 2039 0064 96000000 		.4byte	.LVL9
 2040 0068 0400     		.2byte	0x4
 2041 006a 0A       		.byte	0xa
 2042 006b 0010     		.2byte	0x1000
 2043 006d 9F       		.byte	0x9f
 2044 006e 00000000 		.4byte	0
 2045 0072 00000000 		.4byte	0
 2046              	.LLST3:
 2047 0076 00000000 		.4byte	.LVL13
 2048 007a 06000000 		.4byte	.LVL15
 2049 007e 0100     		.2byte	0x1
 2050 0080 50       		.byte	0x50
 2051 0081 06000000 		.4byte	.LVL15
 2052 0085 1A000000 		.4byte	.LVL17
 2053 0089 0100     		.2byte	0x1
 2054 008b 52       		.byte	0x52
 2055 008c 1A000000 		.4byte	.LVL17
 2056 0090 20000000 		.4byte	.LVL18
 2057 0094 0400     		.2byte	0x4
 2058 0096 F3       		.byte	0xf3
 2059 0097 01       		.uleb128 0x1
 2060 0098 50       		.byte	0x50
 2061 0099 9F       		.byte	0x9f
 2062 009a 20000000 		.4byte	.LVL18
 2063 009e 22000000 		.4byte	.LVL19
 2064 00a2 0100     		.2byte	0x1
 2065 00a4 50       		.byte	0x50
 2066 00a5 22000000 		.4byte	.LVL19
 2067 00a9 28000000 		.4byte	.LFE6
 2068 00ad 0400     		.2byte	0x4
 2069 00af F3       		.byte	0xf3
 2070 00b0 01       		.uleb128 0x1
 2071 00b1 50       		.byte	0x50
 2072 00b2 9F       		.byte	0x9f
 2073 00b3 00000000 		.4byte	0
 2074 00b7 00000000 		.4byte	0
 2075              	.LLST4:
 2076 00bb 02000000 		.4byte	.LVL14
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 53


 2077 00bf 06000000 		.4byte	.LVL15
 2078 00c3 0200     		.2byte	0x2
 2079 00c5 30       		.byte	0x30
 2080 00c6 9F       		.byte	0x9f
 2081 00c7 0E000000 		.4byte	.LVL16
 2082 00cb 20000000 		.4byte	.LVL18
 2083 00cf 0100     		.2byte	0x1
 2084 00d1 50       		.byte	0x50
 2085 00d2 20000000 		.4byte	.LVL18
 2086 00d6 22000000 		.4byte	.LVL19
 2087 00da 0200     		.2byte	0x2
 2088 00dc 30       		.byte	0x30
 2089 00dd 9F       		.byte	0x9f
 2090 00de 22000000 		.4byte	.LVL19
 2091 00e2 28000000 		.4byte	.LFE6
 2092 00e6 0100     		.2byte	0x1
 2093 00e8 50       		.byte	0x50
 2094 00e9 00000000 		.4byte	0
 2095 00ed 00000000 		.4byte	0
 2096              	.LLST5:
 2097 00f1 00000000 		.4byte	.LVL20
 2098 00f5 08000000 		.4byte	.LVL21
 2099 00f9 0100     		.2byte	0x1
 2100 00fb 50       		.byte	0x50
 2101 00fc 08000000 		.4byte	.LVL21
 2102 0100 12000000 		.4byte	.LVL23
 2103 0104 0100     		.2byte	0x1
 2104 0106 54       		.byte	0x54
 2105 0107 12000000 		.4byte	.LVL23
 2106 010b 20000000 		.4byte	.LVL25
 2107 010f 0400     		.2byte	0x4
 2108 0111 F3       		.byte	0xf3
 2109 0112 01       		.uleb128 0x1
 2110 0113 50       		.byte	0x50
 2111 0114 9F       		.byte	0x9f
 2112 0115 20000000 		.4byte	.LVL25
 2113 0119 22000000 		.4byte	.LVL26
 2114 011d 0100     		.2byte	0x1
 2115 011f 54       		.byte	0x54
 2116 0120 22000000 		.4byte	.LVL26
 2117 0124 2C000000 		.4byte	.LFE7
 2118 0128 0400     		.2byte	0x4
 2119 012a F3       		.byte	0xf3
 2120 012b 01       		.uleb128 0x1
 2121 012c 50       		.byte	0x50
 2122 012d 9F       		.byte	0x9f
 2123 012e 00000000 		.4byte	0
 2124 0132 00000000 		.4byte	0
 2125              	.LLST6:
 2126 0136 1E000000 		.4byte	.LVL24
 2127 013a 20000000 		.4byte	.LVL25
 2128 013e 0100     		.2byte	0x1
 2129 0140 50       		.byte	0x50
 2130 0141 22000000 		.4byte	.LVL26
 2131 0145 24000000 		.4byte	.LVL27
 2132 0149 0100     		.2byte	0x1
 2133 014b 50       		.byte	0x50
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 54


 2134 014c 00000000 		.4byte	0
 2135 0150 00000000 		.4byte	0
 2136              	.LLST7:
 2137 0154 00000000 		.4byte	.LVL28
 2138 0158 04000000 		.4byte	.LVL29
 2139 015c 0100     		.2byte	0x1
 2140 015e 50       		.byte	0x50
 2141 015f 04000000 		.4byte	.LVL29
 2142 0163 10000000 		.4byte	.LFE8
 2143 0167 0400     		.2byte	0x4
 2144 0169 F3       		.byte	0xf3
 2145 016a 01       		.uleb128 0x1
 2146 016b 50       		.byte	0x50
 2147 016c 9F       		.byte	0x9f
 2148 016d 00000000 		.4byte	0
 2149 0171 00000000 		.4byte	0
 2150              	.LLST8:
 2151 0175 00000000 		.4byte	.LVL30
 2152 0179 0E000000 		.4byte	.LVL31
 2153 017d 0100     		.2byte	0x1
 2154 017f 50       		.byte	0x50
 2155 0180 0E000000 		.4byte	.LVL31
 2156 0184 1C000000 		.4byte	.LFE9
 2157 0188 0400     		.2byte	0x4
 2158 018a F3       		.byte	0xf3
 2159 018b 01       		.uleb128 0x1
 2160 018c 50       		.byte	0x50
 2161 018d 9F       		.byte	0x9f
 2162 018e 00000000 		.4byte	0
 2163 0192 00000000 		.4byte	0
 2164              	.LLST9:
 2165 0196 00000000 		.4byte	.LVL32
 2166 019a 0E000000 		.4byte	.LVL33
 2167 019e 0100     		.2byte	0x1
 2168 01a0 50       		.byte	0x50
 2169 01a1 0E000000 		.4byte	.LVL33
 2170 01a5 18000000 		.4byte	.LFE10
 2171 01a9 0400     		.2byte	0x4
 2172 01ab F3       		.byte	0xf3
 2173 01ac 01       		.uleb128 0x1
 2174 01ad 50       		.byte	0x50
 2175 01ae 9F       		.byte	0x9f
 2176 01af 00000000 		.4byte	0
 2177 01b3 00000000 		.4byte	0
 2178              	.LLST10:
 2179 01b7 00000000 		.4byte	.LVL34
 2180 01bb 04000000 		.4byte	.LVL35
 2181 01bf 0100     		.2byte	0x1
 2182 01c1 50       		.byte	0x50
 2183 01c2 04000000 		.4byte	.LVL35
 2184 01c6 10000000 		.4byte	.LFE11
 2185 01ca 0400     		.2byte	0x4
 2186 01cc F3       		.byte	0xf3
 2187 01cd 01       		.uleb128 0x1
 2188 01ce 50       		.byte	0x50
 2189 01cf 9F       		.byte	0x9f
 2190 01d0 00000000 		.4byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 55


 2191 01d4 00000000 		.4byte	0
 2192              	.LLST11:
 2193 01d8 00000000 		.4byte	.LVL36
 2194 01dc 04000000 		.4byte	.LVL37
 2195 01e0 0100     		.2byte	0x1
 2196 01e2 50       		.byte	0x50
 2197 01e3 04000000 		.4byte	.LVL37
 2198 01e7 10000000 		.4byte	.LFE12
 2199 01eb 0400     		.2byte	0x4
 2200 01ed F3       		.byte	0xf3
 2201 01ee 01       		.uleb128 0x1
 2202 01ef 50       		.byte	0x50
 2203 01f0 9F       		.byte	0x9f
 2204 01f1 00000000 		.4byte	0
 2205 01f5 00000000 		.4byte	0
 2206              	.LLST12:
 2207 01f9 00000000 		.4byte	.LVL38
 2208 01fd 0C000000 		.4byte	.LVL39
 2209 0201 0100     		.2byte	0x1
 2210 0203 50       		.byte	0x50
 2211 0204 0C000000 		.4byte	.LVL39
 2212 0208 12000000 		.4byte	.LVL41
 2213 020c 0100     		.2byte	0x1
 2214 020e 54       		.byte	0x54
 2215 020f 12000000 		.4byte	.LVL41
 2216 0213 1C000000 		.4byte	.LFE13
 2217 0217 0400     		.2byte	0x4
 2218 0219 F3       		.byte	0xf3
 2219 021a 01       		.uleb128 0x1
 2220 021b 50       		.byte	0x50
 2221 021c 9F       		.byte	0x9f
 2222 021d 00000000 		.4byte	0
 2223 0221 00000000 		.4byte	0
 2224              	.LLST13:
 2225 0225 00000000 		.4byte	.LVL38
 2226 0229 0F000000 		.4byte	.LVL40-1
 2227 022d 0100     		.2byte	0x1
 2228 022f 51       		.byte	0x51
 2229 0230 0F000000 		.4byte	.LVL40-1
 2230 0234 1C000000 		.4byte	.LFE13
 2231 0238 0400     		.2byte	0x4
 2232 023a F3       		.byte	0xf3
 2233 023b 01       		.uleb128 0x1
 2234 023c 51       		.byte	0x51
 2235 023d 9F       		.byte	0x9f
 2236 023e 00000000 		.4byte	0
 2237 0242 00000000 		.4byte	0
 2238              	.LLST14:
 2239 0246 00000000 		.4byte	.LVL42
 2240 024a 0C000000 		.4byte	.LVL43
 2241 024e 0100     		.2byte	0x1
 2242 0250 50       		.byte	0x50
 2243 0251 0C000000 		.4byte	.LVL43
 2244 0255 12000000 		.4byte	.LVL45
 2245 0259 0100     		.2byte	0x1
 2246 025b 54       		.byte	0x54
 2247 025c 12000000 		.4byte	.LVL45
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 56


 2248 0260 1C000000 		.4byte	.LFE14
 2249 0264 0400     		.2byte	0x4
 2250 0266 F3       		.byte	0xf3
 2251 0267 01       		.uleb128 0x1
 2252 0268 50       		.byte	0x50
 2253 0269 9F       		.byte	0x9f
 2254 026a 00000000 		.4byte	0
 2255 026e 00000000 		.4byte	0
 2256              	.LLST15:
 2257 0272 00000000 		.4byte	.LVL42
 2258 0276 0F000000 		.4byte	.LVL44-1
 2259 027a 0100     		.2byte	0x1
 2260 027c 51       		.byte	0x51
 2261 027d 0F000000 		.4byte	.LVL44-1
 2262 0281 16000000 		.4byte	.LVL46
 2263 0285 0100     		.2byte	0x1
 2264 0287 55       		.byte	0x55
 2265 0288 16000000 		.4byte	.LVL46
 2266 028c 1C000000 		.4byte	.LFE14
 2267 0290 0800     		.2byte	0x8
 2268 0292 F3       		.byte	0xf3
 2269 0293 01       		.uleb128 0x1
 2270 0294 50       		.byte	0x50
 2271 0295 32       		.byte	0x32
 2272 0296 24       		.byte	0x24
 2273 0297 73       		.byte	0x73
 2274 0298 00       		.sleb128 0
 2275 0299 22       		.byte	0x22
 2276 029a 00000000 		.4byte	0
 2277 029e 00000000 		.4byte	0
 2278              	.LLST16:
 2279 02a2 00000000 		.4byte	.LVL47
 2280 02a6 0C000000 		.4byte	.LVL48
 2281 02aa 0100     		.2byte	0x1
 2282 02ac 50       		.byte	0x50
 2283 02ad 0C000000 		.4byte	.LVL48
 2284 02b1 44000000 		.4byte	.LVL54
 2285 02b5 0100     		.2byte	0x1
 2286 02b7 54       		.byte	0x54
 2287 02b8 44000000 		.4byte	.LVL54
 2288 02bc 5C000000 		.4byte	.LFE15
 2289 02c0 0400     		.2byte	0x4
 2290 02c2 F3       		.byte	0xf3
 2291 02c3 01       		.uleb128 0x1
 2292 02c4 50       		.byte	0x50
 2293 02c5 9F       		.byte	0x9f
 2294 02c6 00000000 		.4byte	0
 2295 02ca 00000000 		.4byte	0
 2296              	.LLST17:
 2297 02ce 00000000 		.4byte	.LVL47
 2298 02d2 0F000000 		.4byte	.LVL49-1
 2299 02d6 0100     		.2byte	0x1
 2300 02d8 51       		.byte	0x51
 2301 02d9 0F000000 		.4byte	.LVL49-1
 2302 02dd 1A000000 		.4byte	.LVL50
 2303 02e1 0400     		.2byte	0x4
 2304 02e3 F3       		.byte	0xf3
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 57


 2305 02e4 01       		.uleb128 0x1
 2306 02e5 51       		.byte	0x51
 2307 02e6 9F       		.byte	0x9f
 2308 02e7 1A000000 		.4byte	.LVL50
 2309 02eb 28000000 		.4byte	.LVL51
 2310 02ef 0100     		.2byte	0x1
 2311 02f1 51       		.byte	0x51
 2312 02f2 32000000 		.4byte	.LVL52
 2313 02f6 36000000 		.4byte	.LVL53
 2314 02fa 0100     		.2byte	0x1
 2315 02fc 51       		.byte	0x51
 2316 02fd 00000000 		.4byte	0
 2317 0301 00000000 		.4byte	0
 2318              	.LLST18:
 2319 0305 00000000 		.4byte	.LVL56
 2320 0309 0C000000 		.4byte	.LVL57
 2321 030d 0100     		.2byte	0x1
 2322 030f 50       		.byte	0x50
 2323 0310 0C000000 		.4byte	.LVL57
 2324 0314 26000000 		.4byte	.LVL61
 2325 0318 0100     		.2byte	0x1
 2326 031a 55       		.byte	0x55
 2327 031b 26000000 		.4byte	.LVL61
 2328 031f 40000000 		.4byte	.LFE16
 2329 0323 0400     		.2byte	0x4
 2330 0325 F3       		.byte	0xf3
 2331 0326 01       		.uleb128 0x1
 2332 0327 50       		.byte	0x50
 2333 0328 9F       		.byte	0x9f
 2334 0329 00000000 		.4byte	0
 2335 032d 00000000 		.4byte	0
 2336              	.LLST19:
 2337 0331 00000000 		.4byte	.LVL56
 2338 0335 0F000000 		.4byte	.LVL58-1
 2339 0339 0100     		.2byte	0x1
 2340 033b 51       		.byte	0x51
 2341 033c 0F000000 		.4byte	.LVL58-1
 2342 0340 1A000000 		.4byte	.LVL59
 2343 0344 0400     		.2byte	0x4
 2344 0346 F3       		.byte	0xf3
 2345 0347 01       		.uleb128 0x1
 2346 0348 51       		.byte	0x51
 2347 0349 9F       		.byte	0x9f
 2348 034a 1A000000 		.4byte	.LVL59
 2349 034e 23000000 		.4byte	.LVL60-1
 2350 0352 0100     		.2byte	0x1
 2351 0354 50       		.byte	0x50
 2352 0355 00000000 		.4byte	0
 2353 0359 00000000 		.4byte	0
 2354              	.LLST20:
 2355 035d 00000000 		.4byte	.LVL63
 2356 0361 0C000000 		.4byte	.LVL64
 2357 0365 0100     		.2byte	0x1
 2358 0367 50       		.byte	0x50
 2359 0368 0C000000 		.4byte	.LVL64
 2360 036c 28000000 		.4byte	.LVL69
 2361 0370 0100     		.2byte	0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 58


 2362 0372 54       		.byte	0x54
 2363 0373 28000000 		.4byte	.LVL69
 2364 0377 48000000 		.4byte	.LFE17
 2365 037b 0400     		.2byte	0x4
 2366 037d F3       		.byte	0xf3
 2367 037e 01       		.uleb128 0x1
 2368 037f 50       		.byte	0x50
 2369 0380 9F       		.byte	0x9f
 2370 0381 00000000 		.4byte	0
 2371 0385 00000000 		.4byte	0
 2372              	.LLST21:
 2373 0389 00000000 		.4byte	.LVL63
 2374 038d 0F000000 		.4byte	.LVL65-1
 2375 0391 0100     		.2byte	0x1
 2376 0393 51       		.byte	0x51
 2377 0394 0F000000 		.4byte	.LVL65-1
 2378 0398 1A000000 		.4byte	.LVL66
 2379 039c 0400     		.2byte	0x4
 2380 039e F3       		.byte	0xf3
 2381 039f 01       		.uleb128 0x1
 2382 03a0 51       		.byte	0x51
 2383 03a1 9F       		.byte	0x9f
 2384 03a2 1A000000 		.4byte	.LVL66
 2385 03a6 1D000000 		.4byte	.LVL67-1
 2386 03aa 0100     		.2byte	0x1
 2387 03ac 50       		.byte	0x50
 2388 03ad 00000000 		.4byte	0
 2389 03b1 00000000 		.4byte	0
 2390              		.section	.debug_aranges,"",%progbits
 2391 0000 A4000000 		.4byte	0xa4
 2392 0004 0200     		.2byte	0x2
 2393 0006 00000000 		.4byte	.Ldebug_info0
 2394 000a 04       		.byte	0x4
 2395 000b 00       		.byte	0
 2396 000c 0000     		.2byte	0
 2397 000e 0000     		.2byte	0
 2398 0010 00000000 		.4byte	.LFB1
 2399 0014 00010000 		.4byte	.LFE1-.LFB1
 2400 0018 00000000 		.4byte	.LFB2
 2401 001c 24000000 		.4byte	.LFE2-.LFB2
 2402 0020 00000000 		.4byte	.LFB0
 2403 0024 20000000 		.4byte	.LFE0-.LFB0
 2404 0028 00000000 		.4byte	.LFB3
 2405 002c 10000000 		.4byte	.LFE3-.LFB3
 2406 0030 00000000 		.4byte	.LFB4
 2407 0034 14000000 		.4byte	.LFE4-.LFB4
 2408 0038 00000000 		.4byte	.LFB5
 2409 003c 14000000 		.4byte	.LFE5-.LFB5
 2410 0040 00000000 		.4byte	.LFB6
 2411 0044 28000000 		.4byte	.LFE6-.LFB6
 2412 0048 00000000 		.4byte	.LFB7
 2413 004c 2C000000 		.4byte	.LFE7-.LFB7
 2414 0050 00000000 		.4byte	.LFB8
 2415 0054 10000000 		.4byte	.LFE8-.LFB8
 2416 0058 00000000 		.4byte	.LFB9
 2417 005c 1C000000 		.4byte	.LFE9-.LFB9
 2418 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 59


 2419 0064 18000000 		.4byte	.LFE10-.LFB10
 2420 0068 00000000 		.4byte	.LFB11
 2421 006c 10000000 		.4byte	.LFE11-.LFB11
 2422 0070 00000000 		.4byte	.LFB12
 2423 0074 10000000 		.4byte	.LFE12-.LFB12
 2424 0078 00000000 		.4byte	.LFB13
 2425 007c 1C000000 		.4byte	.LFE13-.LFB13
 2426 0080 00000000 		.4byte	.LFB14
 2427 0084 1C000000 		.4byte	.LFE14-.LFB14
 2428 0088 00000000 		.4byte	.LFB15
 2429 008c 5C000000 		.4byte	.LFE15-.LFB15
 2430 0090 00000000 		.4byte	.LFB16
 2431 0094 40000000 		.4byte	.LFE16-.LFB16
 2432 0098 00000000 		.4byte	.LFB17
 2433 009c 48000000 		.4byte	.LFE17-.LFB17
 2434 00a0 00000000 		.4byte	0
 2435 00a4 00000000 		.4byte	0
 2436              		.section	.debug_ranges,"",%progbits
 2437              	.Ldebug_ranges0:
 2438 0000 00000000 		.4byte	.LFB1
 2439 0004 00010000 		.4byte	.LFE1
 2440 0008 00000000 		.4byte	.LFB2
 2441 000c 24000000 		.4byte	.LFE2
 2442 0010 00000000 		.4byte	.LFB0
 2443 0014 20000000 		.4byte	.LFE0
 2444 0018 00000000 		.4byte	.LFB3
 2445 001c 10000000 		.4byte	.LFE3
 2446 0020 00000000 		.4byte	.LFB4
 2447 0024 14000000 		.4byte	.LFE4
 2448 0028 00000000 		.4byte	.LFB5
 2449 002c 14000000 		.4byte	.LFE5
 2450 0030 00000000 		.4byte	.LFB6
 2451 0034 28000000 		.4byte	.LFE6
 2452 0038 00000000 		.4byte	.LFB7
 2453 003c 2C000000 		.4byte	.LFE7
 2454 0040 00000000 		.4byte	.LFB8
 2455 0044 10000000 		.4byte	.LFE8
 2456 0048 00000000 		.4byte	.LFB9
 2457 004c 1C000000 		.4byte	.LFE9
 2458 0050 00000000 		.4byte	.LFB10
 2459 0054 18000000 		.4byte	.LFE10
 2460 0058 00000000 		.4byte	.LFB11
 2461 005c 10000000 		.4byte	.LFE11
 2462 0060 00000000 		.4byte	.LFB12
 2463 0064 10000000 		.4byte	.LFE12
 2464 0068 00000000 		.4byte	.LFB13
 2465 006c 1C000000 		.4byte	.LFE13
 2466 0070 00000000 		.4byte	.LFB14
 2467 0074 1C000000 		.4byte	.LFE14
 2468 0078 00000000 		.4byte	.LFB15
 2469 007c 5C000000 		.4byte	.LFE15
 2470 0080 00000000 		.4byte	.LFB16
 2471 0084 40000000 		.4byte	.LFE16
 2472 0088 00000000 		.4byte	.LFB17
 2473 008c 48000000 		.4byte	.LFE17
 2474 0090 00000000 		.4byte	0
 2475 0094 00000000 		.4byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 60


 2476              		.section	.debug_line,"",%progbits
 2477              	.Ldebug_line0:
 2478 0000 75020000 		.section	.debug_str,"MS",%progbits,1
 2478      02004D00 
 2478      00000201 
 2478      FB0E0D00 
 2478      01010101 
 2479              	.LASF10:
 2480 0000 75696E74 		.ascii	"uint16\000"
 2480      313600
 2481              	.LASF48:
 2482 0007 61646347 		.ascii	"adcGain\000"
 2482      61696E00 
 2483              	.LASF24:
 2484 000f 636F756E 		.ascii	"counts\000"
 2484      747300
 2485              	.LASF53:
 2486 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2486      436F756E 
 2486      7473546F 
 2486      5F566F6C 
 2486      747300
 2487              	.LASF63:
 2488 0029 433A5C77 		.ascii	"C:\\work\\PSoC4\\WeatherStation\\WeatherStation\\We"
 2488      6F726B5C 
 2488      50536F43 
 2488      345C5765 
 2488      61746865 
 2489 0057 61746865 		.ascii	"atherStation.cydsn\000"
 2489      72537461 
 2489      74696F6E 
 2489      2E637964 
 2489      736E00
 2490              	.LASF25:
 2491 006a 4144435F 		.ascii	"ADC_Init\000"
 2491      496E6974 
 2491      00
 2492              	.LASF7:
 2493 0073 6C6F6E67 		.ascii	"long long unsigned int\000"
 2493      206C6F6E 
 2493      6720756E 
 2493      7369676E 
 2493      65642069 
 2494              	.LASF29:
 2495 008a 4144435F 		.ascii	"ADC_StartConvert\000"
 2495      53746172 
 2495      74436F6E 
 2495      76657274 
 2495      00
 2496              	.LASF6:
 2497 009b 6C6F6E67 		.ascii	"long long int\000"
 2497      206C6F6E 
 2497      6720696E 
 2497      7400
 2498              	.LASF0:
 2499 00a9 7369676E 		.ascii	"signed char\000"
 2499      65642063 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 61


 2499      68617200 
 2500              	.LASF31:
 2501 00b5 73746174 		.ascii	"status\000"
 2501      757300
 2502              	.LASF13:
 2503 00bc 696E7433 		.ascii	"int32\000"
 2503      3200
 2504              	.LASF27:
 2505 00c2 4144435F 		.ascii	"ADC_Start\000"
 2505      53746172 
 2505      7400
 2506              	.LASF4:
 2507 00cc 6C6F6E67 		.ascii	"long int\000"
 2507      20696E74 
 2507      00
 2508              	.LASF52:
 2509 00d5 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2509      436F756E 
 2509      7473546F 
 2509      5F75566F 
 2509      6C747300 
 2510              	.LASF58:
 2511 00e9 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2511      636F756E 
 2511      74735065 
 2511      72313056 
 2511      6F6C7400 
 2512              	.LASF9:
 2513 00fd 75696E74 		.ascii	"uint8\000"
 2513      3800
 2514              	.LASF60:
 2515 0103 43794465 		.ascii	"CyDelayUs\000"
 2515      6C617955 
 2515      7300
 2516              	.LASF16:
 2517 010d 646F7562 		.ascii	"double\000"
 2517      6C6500
 2518              	.LASF11:
 2519 0114 75696E74 		.ascii	"uint32\000"
 2519      333200
 2520              	.LASF38:
 2521 011b 6D61736B 		.ascii	"mask\000"
 2521      00
 2522              	.LASF56:
 2523 0120 4144435F 		.ascii	"ADC_initVar\000"
 2523      696E6974 
 2523      56617200 
 2524              	.LASF34:
 2525 012c 7265744D 		.ascii	"retMode\000"
 2525      6F646500 
 2526              	.LASF43:
 2527 0134 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2527      5365744C 
 2527      696D6974 
 2527      4D61736B 
 2527      00
 2528              	.LASF8:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 62


 2529 0145 756E7369 		.ascii	"unsigned int\000"
 2529      676E6564 
 2529      20696E74 
 2529      00
 2530              	.LASF64:
 2531 0152 75566F6C 		.ascii	"uVolts\000"
 2531      747300
 2532              	.LASF5:
 2533 0159 6C6F6E67 		.ascii	"long unsigned int\000"
 2533      20756E73 
 2533      69676E65 
 2533      6420696E 
 2533      7400
 2534              	.LASF44:
 2535 016b 4144435F 		.ascii	"ADC_SetSatMask\000"
 2535      53657453 
 2535      61744D61 
 2535      736B00
 2536              	.LASF54:
 2537 017a 766F6C74 		.ascii	"volts\000"
 2537      7300
 2538              	.LASF23:
 2539 0180 746D7052 		.ascii	"tmpRegVal\000"
 2539      65675661 
 2539      6C00
 2540              	.LASF3:
 2541 018a 73686F72 		.ascii	"short unsigned int\000"
 2541      7420756E 
 2541      7369676E 
 2541      65642069 
 2541      6E7400
 2542              	.LASF65:
 2543 019d 4379496E 		.ascii	"CyIntSetVector\000"
 2543      74536574 
 2543      56656374 
 2543      6F7200
 2544              	.LASF30:
 2545 01ac 4144435F 		.ascii	"ADC_StopConvert\000"
 2545      53746F70 
 2545      436F6E76 
 2545      65727400 
 2546              	.LASF51:
 2547 01bc 6D566F6C 		.ascii	"mVolts\000"
 2547      747300
 2548              	.LASF19:
 2549 01c3 72656733 		.ascii	"reg32\000"
 2549      3200
 2550              	.LASF14:
 2551 01c9 666C6F61 		.ascii	"float32\000"
 2551      74333200 
 2552              	.LASF21:
 2553 01d1 73697A65 		.ascii	"sizetype\000"
 2553      74797065 
 2553      00
 2554              	.LASF40:
 2555 01da 6C6F774C 		.ascii	"lowLimit\000"
 2555      696D6974 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 63


 2555      00
 2556              	.LASF41:
 2557 01e3 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2557      53657448 
 2557      6967684C 
 2557      696D6974 
 2557      00
 2558              	.LASF32:
 2559 01f4 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2559      4973456E 
 2559      64436F6E 
 2559      76657273 
 2559      696F6E00 
 2560              	.LASF61:
 2561 0208 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2561      4320342E 
 2561      392E3320 
 2561      32303135 
 2561      30333033 
 2562 023b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2562      20726576 
 2562      6973696F 
 2562      6E203232 
 2562      31323230 
 2563 026e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2563      66756E63 
 2563      74696F6E 
 2563      2D736563 
 2563      74696F6E 
 2564              	.LASF17:
 2565 0296 696E7436 		.ascii	"int64\000"
 2565      3400
 2566              	.LASF59:
 2567 029c 4379496E 		.ascii	"CyIntSetPriority\000"
 2567      74536574 
 2567      5072696F 
 2567      72697479 
 2567      00
 2568              	.LASF37:
 2569 02ad 4144435F 		.ascii	"ADC_SetChanMask\000"
 2569      53657443 
 2569      68616E4D 
 2569      61736B00 
 2570              	.LASF47:
 2571 02bd 4144435F 		.ascii	"ADC_SetGain\000"
 2571      53657447 
 2571      61696E00 
 2572              	.LASF15:
 2573 02c9 666C6F61 		.ascii	"float\000"
 2573      7400
 2574              	.LASF42:
 2575 02cf 68696768 		.ascii	"highLimit\000"
 2575      4C696D69 
 2575      7400
 2576              	.LASF49:
 2577 02d9 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2577      436F756E 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 64


 2577      7473546F 
 2577      5F6D566F 
 2577      6C747300 
 2578              	.LASF39:
 2579 02ed 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2579      5365744C 
 2579      6F774C69 
 2579      6D697400 
 2580              	.LASF66:
 2581 02fd 43794861 		.ascii	"CyHalt\000"
 2581      6C7400
 2582              	.LASF62:
 2583 0304 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2583      6E657261 
 2583      7465645F 
 2583      536F7572 
 2583      63655C50 
 2584              	.LASF1:
 2585 0323 756E7369 		.ascii	"unsigned char\000"
 2585      676E6564 
 2585      20636861 
 2585      7200
 2586              	.LASF57:
 2587 0331 4144435F 		.ascii	"ADC_offset\000"
 2587      6F666673 
 2587      657400
 2588              	.LASF2:
 2589 033c 73686F72 		.ascii	"short int\000"
 2589      7420696E 
 2589      7400
 2590              	.LASF28:
 2591 0346 4144435F 		.ascii	"ADC_Stop\000"
 2591      53746F70 
 2591      00
 2592              	.LASF22:
 2593 034f 63684E75 		.ascii	"chNum\000"
 2593      6D00
 2594              	.LASF35:
 2595 0355 6368616E 		.ascii	"chan\000"
 2595      00
 2596              	.LASF18:
 2597 035a 63686172 		.ascii	"char\000"
 2597      00
 2598              	.LASF20:
 2599 035f 63796973 		.ascii	"cyisraddress\000"
 2599      72616464 
 2599      72657373 
 2599      00
 2600              	.LASF55:
 2601 036c 4144435F 		.ascii	"ADC_channelsConfig\000"
 2601      6368616E 
 2601      6E656C73 
 2601      436F6E66 
 2601      696700
 2602              	.LASF46:
 2603 037f 6F666673 		.ascii	"offset\000"
 2603      657400
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccxmwziH.s 			page 65


 2604              	.LASF50:
 2605 0386 61646343 		.ascii	"adcCounts\000"
 2605      6F756E74 
 2605      7300
 2606              	.LASF26:
 2607 0390 4144435F 		.ascii	"ADC_Enable\000"
 2607      456E6162 
 2607      6C6500
 2608              	.LASF12:
 2609 039b 696E7431 		.ascii	"int16\000"
 2609      3600
 2610              	.LASF45:
 2611 03a1 4144435F 		.ascii	"ADC_SetOffset\000"
 2611      5365744F 
 2611      66667365 
 2611      7400
 2612              	.LASF36:
 2613 03af 72657375 		.ascii	"result\000"
 2613      6C7400
 2614              	.LASF33:
 2615 03b6 4144435F 		.ascii	"ADC_GetResult16\000"
 2615      47657452 
 2615      6573756C 
 2615      74313600 
 2616              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
